ARM GAS  /tmp/ccRo4o9e.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"bsp_usart.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.ResetUartrRx,"ax",%progbits
  18              		.align	1
  19              		.global	ResetUartrRx
  20              		.syntax unified
  21              		.thumb
  22              		.thumb_func
  23              		.fpu fpv4-sp-d16
  25              	ResetUartrRx:
  26              	.LFB124:
  27              		.file 1 "Src/bsp_usart.c"
   1:Src/bsp_usart.c **** #include "bsp_usart.h"
   2:Src/bsp_usart.c **** 
   3:Src/bsp_usart.c **** 
   4:Src/bsp_usart.c **** UART_HandleTypeDef uart2_hand_typedef;
   5:Src/bsp_usart.c **** 
   6:Src/bsp_usart.c **** uint8_t aRxbuf[1] = {0};
   7:Src/bsp_usart.c **** 
   8:Src/bsp_usart.c **** 
   9:Src/bsp_usart.c **** TYPEDEF_UART_RX pcUsart2RX = {{0},0,0,0};
  10:Src/bsp_usart.c **** 
  11:Src/bsp_usart.c **** void ResetUartrRx(TYPEDEF_UART_RX *puartrx)
  12:Src/bsp_usart.c **** {
  28              		.loc 1 12 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              	.LVL0:
  33 0000 10B5     		push	{r4, lr}
  34              	.LCFI0:
  35              		.cfi_def_cfa_offset 8
  36              		.cfi_offset 4, -8
  37              		.cfi_offset 14, -4
  38 0002 0446     		mov	r4, r0
  13:Src/bsp_usart.c **** 	 memset(puartrx->pcRxbuf,0,200);
  39              		.loc 1 13 0
  40 0004 C822     		movs	r2, #200
  41 0006 0021     		movs	r1, #0
  42 0008 FFF7FEFF 		bl	memset
  43              	.LVL1:
  14:Src/bsp_usart.c **** 	 puartrx->rofset = 0;
  44              		.loc 1 14 0
ARM GAS  /tmp/ccRo4o9e.s 			page 2


  45 000c 0023     		movs	r3, #0
  46 000e 84F8C830 		strb	r3, [r4, #200]
  15:Src/bsp_usart.c **** 	 puartrx->lastTick = 0;
  47              		.loc 1 15 0
  48 0012 C4F8CC30 		str	r3, [r4, #204]
  16:Src/bsp_usart.c **** 	 puartrx->rflag = 0;
  49              		.loc 1 16 0
  50 0016 84F8D030 		strb	r3, [r4, #208]
  51 001a 10BD     		pop	{r4, pc}
  52              		.cfi_endproc
  53              	.LFE124:
  55              		.section	.text.USART2_Init,"ax",%progbits
  56              		.align	1
  57              		.global	USART2_Init
  58              		.syntax unified
  59              		.thumb
  60              		.thumb_func
  61              		.fpu fpv4-sp-d16
  63              	USART2_Init:
  64              	.LFB125:
  17:Src/bsp_usart.c **** }
  18:Src/bsp_usart.c **** 
  19:Src/bsp_usart.c **** 
  20:Src/bsp_usart.c **** void USART2_Init(void)
  21:Src/bsp_usart.c **** {
  65              		.loc 1 21 0
  66              		.cfi_startproc
  67              		@ args = 0, pretend = 0, frame = 0
  68              		@ frame_needed = 0, uses_anonymous_args = 0
  69 0000 10B5     		push	{r4, lr}
  70              	.LCFI1:
  71              		.cfi_def_cfa_offset 8
  72              		.cfi_offset 4, -8
  73              		.cfi_offset 14, -4
  22:Src/bsp_usart.c **** 		//UART 初始化设置
  23:Src/bsp_usart.c **** 		uart2_hand_typedef.Instance=USART2;					    //USART2
  74              		.loc 1 23 0
  75 0002 0B4C     		ldr	r4, .L5
  76 0004 0B4B     		ldr	r3, .L5+4
  77 0006 2360     		str	r3, [r4]
  24:Src/bsp_usart.c **** 		uart2_hand_typedef.Init.BaudRate=115200;				    //波特率
  78              		.loc 1 24 0
  79 0008 4FF4E133 		mov	r3, #115200
  80 000c 6360     		str	r3, [r4, #4]
  25:Src/bsp_usart.c **** 		uart2_hand_typedef.Init.WordLength=UART_WORDLENGTH_8B;   //字长为8位数据格式
  81              		.loc 1 25 0
  82 000e 0023     		movs	r3, #0
  83 0010 A360     		str	r3, [r4, #8]
  26:Src/bsp_usart.c **** 		uart2_hand_typedef.Init.StopBits=UART_STOPBITS_1;	    //一个停止位
  84              		.loc 1 26 0
  85 0012 E360     		str	r3, [r4, #12]
  27:Src/bsp_usart.c **** 		uart2_hand_typedef.Init.Parity=UART_PARITY_NONE;		    //无奇偶校验位
  86              		.loc 1 27 0
  87 0014 2361     		str	r3, [r4, #16]
  28:Src/bsp_usart.c **** 		uart2_hand_typedef.Init.HwFlowCtl=UART_HWCONTROL_NONE;   //无硬件流控
  88              		.loc 1 28 0
  89 0016 A361     		str	r3, [r4, #24]
ARM GAS  /tmp/ccRo4o9e.s 			page 3


  29:Src/bsp_usart.c **** 		uart2_hand_typedef.Init.Mode=UART_MODE_TX_RX;		    //收发模式
  90              		.loc 1 29 0
  91 0018 0C23     		movs	r3, #12
  92 001a 6361     		str	r3, [r4, #20]
  30:Src/bsp_usart.c **** 		HAL_UART_Init(&uart2_hand_typedef);					    //HAL_UART_Init()会使能UART1
  93              		.loc 1 30 0
  94 001c 2046     		mov	r0, r4
  95 001e FFF7FEFF 		bl	HAL_UART_Init
  96              	.LVL2:
  31:Src/bsp_usart.c **** 
  32:Src/bsp_usart.c **** 		HAL_UART_Receive_IT(&uart2_hand_typedef, (uint8_t *)aRxbuf, 1);//该函数会开启接收中断：标志位UART
  97              		.loc 1 32 0
  98 0022 0122     		movs	r2, #1
  99 0024 0449     		ldr	r1, .L5+8
 100 0026 2046     		mov	r0, r4
 101 0028 FFF7FEFF 		bl	HAL_UART_Receive_IT
 102              	.LVL3:
 103 002c 10BD     		pop	{r4, pc}
 104              	.L6:
 105 002e 00BF     		.align	2
 106              	.L5:
 107 0030 00000000 		.word	uart2_hand_typedef
 108 0034 00440040 		.word	1073759232
 109 0038 00000000 		.word	.LANCHOR0
 110              		.cfi_endproc
 111              	.LFE125:
 113              		.section	.text.HAL_UART_MspInit,"ax",%progbits
 114              		.align	1
 115              		.global	HAL_UART_MspInit
 116              		.syntax unified
 117              		.thumb
 118              		.thumb_func
 119              		.fpu fpv4-sp-d16
 121              	HAL_UART_MspInit:
 122              	.LFB126:
  33:Src/bsp_usart.c **** 
  34:Src/bsp_usart.c **** }
  35:Src/bsp_usart.c **** 
  36:Src/bsp_usart.c **** void HAL_UART_MspInit(UART_HandleTypeDef *huart)
  37:Src/bsp_usart.c **** {
 123              		.loc 1 37 0
 124              		.cfi_startproc
 125              		@ args = 0, pretend = 0, frame = 32
 126              		@ frame_needed = 0, uses_anonymous_args = 0
 127              	.LVL4:
  38:Src/bsp_usart.c **** 	GPIO_InitTypeDef GPIO_Initure;
  39:Src/bsp_usart.c **** 	
  40:Src/bsp_usart.c **** 	if(huart->Instance==USART2)//如果是串口2，进行串口2 MSP初始化
 128              		.loc 1 40 0
 129 0000 0268     		ldr	r2, [r0]
 130 0002 1D4B     		ldr	r3, .L14
 131 0004 9A42     		cmp	r2, r3
 132 0006 00D0     		beq	.L13
 133 0008 7047     		bx	lr
 134              	.L13:
  37:Src/bsp_usart.c **** 	GPIO_InitTypeDef GPIO_Initure;
 135              		.loc 1 37 0
ARM GAS  /tmp/ccRo4o9e.s 			page 4


 136 000a 10B5     		push	{r4, lr}
 137              	.LCFI2:
 138              		.cfi_def_cfa_offset 8
 139              		.cfi_offset 4, -8
 140              		.cfi_offset 14, -4
 141 000c 88B0     		sub	sp, sp, #32
 142              	.LCFI3:
 143              		.cfi_def_cfa_offset 40
 144              	.LBB2:
  41:Src/bsp_usart.c **** 	{
  42:Src/bsp_usart.c **** 		__HAL_RCC_GPIOA_CLK_ENABLE();			//使能GPIOA时钟
 145              		.loc 1 42 0
 146 000e 0021     		movs	r1, #0
 147 0010 0191     		str	r1, [sp, #4]
 148 0012 03F5FA33 		add	r3, r3, #128000
 149 0016 1A6B     		ldr	r2, [r3, #48]
 150 0018 42F00102 		orr	r2, r2, #1
 151 001c 1A63     		str	r2, [r3, #48]
 152 001e 1A6B     		ldr	r2, [r3, #48]
 153 0020 02F00102 		and	r2, r2, #1
 154 0024 0192     		str	r2, [sp, #4]
 155 0026 019A     		ldr	r2, [sp, #4]
 156              	.LBE2:
 157              	.LBB3:
  43:Src/bsp_usart.c **** 		__HAL_RCC_USART2_CLK_ENABLE();			//使能USART1时钟
 158              		.loc 1 43 0
 159 0028 0291     		str	r1, [sp, #8]
 160 002a 1A6C     		ldr	r2, [r3, #64]
 161 002c 42F40032 		orr	r2, r2, #131072
 162 0030 1A64     		str	r2, [r3, #64]
 163 0032 1B6C     		ldr	r3, [r3, #64]
 164 0034 03F40033 		and	r3, r3, #131072
 165 0038 0293     		str	r3, [sp, #8]
 166 003a 029B     		ldr	r3, [sp, #8]
 167              	.LBE3:
  44:Src/bsp_usart.c **** 	
  45:Src/bsp_usart.c **** 		GPIO_Initure.Pin=GPIO_PIN_2;			//PA9
 168              		.loc 1 45 0
 169 003c 0423     		movs	r3, #4
 170 003e 0393     		str	r3, [sp, #12]
  46:Src/bsp_usart.c **** 		GPIO_Initure.Mode=GPIO_MODE_AF_PP;		//复用推挽输出
 171              		.loc 1 46 0
 172 0040 0223     		movs	r3, #2
 173 0042 0493     		str	r3, [sp, #16]
  47:Src/bsp_usart.c **** 		GPIO_Initure.Pull=GPIO_PULLUP;			//上拉
 174              		.loc 1 47 0
 175 0044 0122     		movs	r2, #1
 176 0046 0592     		str	r2, [sp, #20]
  48:Src/bsp_usart.c **** 		GPIO_Initure.Speed=GPIO_SPEED_FAST;		//高速
 177              		.loc 1 48 0
 178 0048 0693     		str	r3, [sp, #24]
  49:Src/bsp_usart.c **** 		GPIO_Initure.Alternate=GPIO_AF7_USART1;	//复用为USART1
 179              		.loc 1 49 0
 180 004a 0723     		movs	r3, #7
 181 004c 0793     		str	r3, [sp, #28]
  50:Src/bsp_usart.c **** 		HAL_GPIO_Init(GPIOA,&GPIO_Initure);	   	//初始化PA9
 182              		.loc 1 50 0
ARM GAS  /tmp/ccRo4o9e.s 			page 5


 183 004e 0B4C     		ldr	r4, .L14+4
 184 0050 03A9     		add	r1, sp, #12
 185 0052 2046     		mov	r0, r4
 186              	.LVL5:
 187 0054 FFF7FEFF 		bl	HAL_GPIO_Init
 188              	.LVL6:
  51:Src/bsp_usart.c **** 
  52:Src/bsp_usart.c **** 		GPIO_Initure.Pin=GPIO_PIN_3;			//PA10
 189              		.loc 1 52 0
 190 0058 0823     		movs	r3, #8
 191 005a 0393     		str	r3, [sp, #12]
  53:Src/bsp_usart.c **** 		HAL_GPIO_Init(GPIOA,&GPIO_Initure);	   	//初始化PA10
 192              		.loc 1 53 0
 193 005c 03A9     		add	r1, sp, #12
 194 005e 2046     		mov	r0, r4
 195 0060 FFF7FEFF 		bl	HAL_GPIO_Init
 196              	.LVL7:
  54:Src/bsp_usart.c **** 		
  55:Src/bsp_usart.c **** 		HAL_NVIC_EnableIRQ(USART2_IRQn);		//使能USART1中断通道
 197              		.loc 1 55 0
 198 0064 2620     		movs	r0, #38
 199 0066 FFF7FEFF 		bl	HAL_NVIC_EnableIRQ
 200              	.LVL8:
  56:Src/bsp_usart.c **** 		HAL_NVIC_SetPriority(USART2_IRQn,3,3);	//抢占优先级3，子优先级3
 201              		.loc 1 56 0
 202 006a 0322     		movs	r2, #3
 203 006c 1146     		mov	r1, r2
 204 006e 2620     		movs	r0, #38
 205 0070 FFF7FEFF 		bl	HAL_NVIC_SetPriority
 206              	.LVL9:
  57:Src/bsp_usart.c **** 	}
  58:Src/bsp_usart.c **** 
  59:Src/bsp_usart.c **** }
 207              		.loc 1 59 0
 208 0074 08B0     		add	sp, sp, #32
 209              	.LCFI4:
 210              		.cfi_def_cfa_offset 8
 211              		@ sp needed
 212 0076 10BD     		pop	{r4, pc}
 213              	.L15:
 214              		.align	2
 215              	.L14:
 216 0078 00440040 		.word	1073759232
 217 007c 00000240 		.word	1073872896
 218              		.cfi_endproc
 219              	.LFE126:
 221              		.section	.text.HAL_UART_RxCpltCallback,"ax",%progbits
 222              		.align	1
 223              		.global	HAL_UART_RxCpltCallback
 224              		.syntax unified
 225              		.thumb
 226              		.thumb_func
 227              		.fpu fpv4-sp-d16
 229              	HAL_UART_RxCpltCallback:
 230              	.LFB127:
  60:Src/bsp_usart.c **** 
  61:Src/bsp_usart.c **** void HAL_UART_RxCpltCallback(UART_HandleTypeDef *huart)
ARM GAS  /tmp/ccRo4o9e.s 			page 6


  62:Src/bsp_usart.c **** {
 231              		.loc 1 62 0
 232              		.cfi_startproc
 233              		@ args = 0, pretend = 0, frame = 0
 234              		@ frame_needed = 0, uses_anonymous_args = 0
 235              	.LVL10:
  63:Src/bsp_usart.c **** 	if(huart->Instance==USART2)//如果是串口2
 236              		.loc 1 63 0
 237 0000 0268     		ldr	r2, [r0]
 238 0002 0C4B     		ldr	r3, .L23
 239 0004 9A42     		cmp	r2, r3
 240 0006 00D0     		beq	.L22
 241              	.L19:
 242 0008 7047     		bx	lr
 243              	.L22:
  64:Src/bsp_usart.c **** 	{
  65:Src/bsp_usart.c **** 		    if(pcUsart2RX.rflag == 0)
 244              		.loc 1 65 0
 245 000a 0B4B     		ldr	r3, .L23+4
 246 000c 93F8D030 		ldrb	r3, [r3, #208]	@ zero_extendqisi2
 247 0010 002B     		cmp	r3, #0
 248 0012 F9D1     		bne	.L19
  62:Src/bsp_usart.c **** 	if(huart->Instance==USART2)//如果是串口2
 249              		.loc 1 62 0
 250 0014 10B5     		push	{r4, lr}
 251              	.LCFI5:
 252              		.cfi_def_cfa_offset 8
 253              		.cfi_offset 4, -8
 254              		.cfi_offset 14, -4
  66:Src/bsp_usart.c **** 				{
  67:Src/bsp_usart.c **** 					pcUsart2RX.pcRxbuf[pcUsart2RX.rofset++] = aRxbuf[0];
 255              		.loc 1 67 0
 256 0016 084C     		ldr	r4, .L23+4
 257 0018 94F8C830 		ldrb	r3, [r4, #200]	@ zero_extendqisi2
 258 001c 5A1C     		adds	r2, r3, #1
 259 001e 84F8C820 		strb	r2, [r4, #200]
 260 0022 064A     		ldr	r2, .L23+8
 261 0024 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 262 0026 E254     		strb	r2, [r4, r3]
  68:Src/bsp_usart.c **** 					pcUsart2RX.lastTick = HAL_GetTick();
 263              		.loc 1 68 0
 264 0028 FFF7FEFF 		bl	HAL_GetTick
 265              	.LVL11:
 266 002c C4F8CC00 		str	r0, [r4, #204]
 267 0030 10BD     		pop	{r4, pc}
 268              	.L24:
 269 0032 00BF     		.align	2
 270              	.L23:
 271 0034 00440040 		.word	1073759232
 272 0038 00000000 		.word	.LANCHOR1
 273 003c 00000000 		.word	.LANCHOR0
 274              		.cfi_endproc
 275              	.LFE127:
 277              		.section	.text.USART2_IRQHandler,"ax",%progbits
 278              		.align	1
 279              		.global	USART2_IRQHandler
 280              		.syntax unified
ARM GAS  /tmp/ccRo4o9e.s 			page 7


 281              		.thumb
 282              		.thumb_func
 283              		.fpu fpv4-sp-d16
 285              	USART2_IRQHandler:
 286              	.LFB128:
  69:Src/bsp_usart.c **** 				}
  70:Src/bsp_usart.c **** 	}
  71:Src/bsp_usart.c **** }
  72:Src/bsp_usart.c ****  
  73:Src/bsp_usart.c **** 
  74:Src/bsp_usart.c **** void USART2_IRQHandler(void)                	
  75:Src/bsp_usart.c **** {
 287              		.loc 1 75 0
 288              		.cfi_startproc
 289              		@ args = 0, pretend = 0, frame = 0
 290              		@ frame_needed = 0, uses_anonymous_args = 0
 291 0000 10B5     		push	{r4, lr}
 292              	.LCFI6:
 293              		.cfi_def_cfa_offset 8
 294              		.cfi_offset 4, -8
 295              		.cfi_offset 14, -4
 296              	.LVL12:
  76:Src/bsp_usart.c **** 		uint32_t timeout=0;
  77:Src/bsp_usart.c **** 		uint32_t maxDelay=0x1FFFF;	
  78:Src/bsp_usart.c **** 	
  79:Src/bsp_usart.c **** 		HAL_UART_IRQHandler(&uart2_hand_typedef);	//调用HAL库中断处理公用函数
 297              		.loc 1 79 0
 298 0002 0E48     		ldr	r0, .L35
 299 0004 FFF7FEFF 		bl	HAL_UART_IRQHandler
 300              	.LVL13:
  80:Src/bsp_usart.c **** 		timeout=0;
 301              		.loc 1 80 0
 302 0008 0024     		movs	r4, #0
 303              	.LVL14:
 304              	.L26:
  81:Src/bsp_usart.c **** 		while (HAL_UART_GetState(&uart2_hand_typedef) != HAL_UART_STATE_READY)//等待就绪
 305              		.loc 1 81 0
 306 000a 0C48     		ldr	r0, .L35
 307 000c FFF7FEFF 		bl	HAL_UART_GetState
 308              	.LVL15:
 309 0010 2028     		cmp	r0, #32
 310 0012 05D0     		beq	.L33
  82:Src/bsp_usart.c **** 		{
  83:Src/bsp_usart.c **** 				timeout++;////超时处理
 311              		.loc 1 83 0
 312 0014 0134     		adds	r4, r4, #1
 313              	.LVL16:
  84:Src/bsp_usart.c **** 				if(timeout>maxDelay) break;		
 314              		.loc 1 84 0
 315 0016 B4F5003F 		cmp	r4, #131072
 316 001a F6D3     		bcc	.L26
 317 001c 0024     		movs	r4, #0
 318              	.LVL17:
 319 001e 00E0     		b	.L27
 320              	.LVL18:
 321              	.L33:
 322 0020 0024     		movs	r4, #0
ARM GAS  /tmp/ccRo4o9e.s 			page 8


 323              	.LVL19:
 324              	.L27:
  85:Src/bsp_usart.c **** 		}
  86:Src/bsp_usart.c **** 		timeout=0;
  87:Src/bsp_usart.c **** 		while(HAL_UART_Receive_IT(&uart2_hand_typedef, (uint8_t *)aRxbuf, 1) != HAL_OK)//一次处理完成之后
 325              		.loc 1 87 0
 326 0022 0122     		movs	r2, #1
 327 0024 0649     		ldr	r1, .L35+4
 328 0026 0548     		ldr	r0, .L35
 329 0028 FFF7FEFF 		bl	HAL_UART_Receive_IT
 330              	.LVL20:
 331 002c 20B1     		cbz	r0, .L34
  88:Src/bsp_usart.c **** 		{
  89:Src/bsp_usart.c **** 				timeout++; //超时处理
 332              		.loc 1 89 0
 333 002e 0134     		adds	r4, r4, #1
 334              	.LVL21:
  90:Src/bsp_usart.c **** 				if(timeout>maxDelay) break;	
 335              		.loc 1 90 0
 336 0030 B4F5003F 		cmp	r4, #131072
 337 0034 F5D3     		bcc	.L27
 338 0036 10BD     		pop	{r4, pc}
 339              	.LVL22:
 340              	.L34:
 341 0038 10BD     		pop	{r4, pc}
 342              	.LVL23:
 343              	.L36:
 344 003a 00BF     		.align	2
 345              	.L35:
 346 003c 00000000 		.word	uart2_hand_typedef
 347 0040 00000000 		.word	.LANCHOR0
 348              		.cfi_endproc
 349              	.LFE128:
 351              		.section	.text.HAL_SYSTICK_Callback,"ax",%progbits
 352              		.align	1
 353              		.global	HAL_SYSTICK_Callback
 354              		.syntax unified
 355              		.thumb
 356              		.thumb_func
 357              		.fpu fpv4-sp-d16
 359              	HAL_SYSTICK_Callback:
 360              	.LFB129:
  91:Src/bsp_usart.c **** 		}
  92:Src/bsp_usart.c **** }
  93:Src/bsp_usart.c **** 
  94:Src/bsp_usart.c **** void HAL_SYSTICK_Callback(void)
  95:Src/bsp_usart.c **** {
 361              		.loc 1 95 0
 362              		.cfi_startproc
 363              		@ args = 0, pretend = 0, frame = 0
 364              		@ frame_needed = 0, uses_anonymous_args = 0
 365 0000 08B5     		push	{r3, lr}
 366              	.LCFI7:
 367              		.cfi_def_cfa_offset 8
 368              		.cfi_offset 3, -8
 369              		.cfi_offset 14, -4
  96:Src/bsp_usart.c **** 		if((HAL_GetTick() - pcUsart2RX.lastTick) > 30  && pcUsart2RX.rflag == 0 && pcUsart2RX.lastTick!=0
ARM GAS  /tmp/ccRo4o9e.s 			page 9


 370              		.loc 1 96 0
 371 0002 FFF7FEFF 		bl	HAL_GetTick
 372              	.LVL24:
 373 0006 084B     		ldr	r3, .L40
 374 0008 D3F8CC30 		ldr	r3, [r3, #204]
 375 000c C01A     		subs	r0, r0, r3
 376 000e 1E28     		cmp	r0, #30
 377 0010 08D9     		bls	.L37
 378              		.loc 1 96 0 is_stmt 0 discriminator 1
 379 0012 054A     		ldr	r2, .L40
 380 0014 92F8D020 		ldrb	r2, [r2, #208]	@ zero_extendqisi2
 381 0018 22B9     		cbnz	r2, .L37
 382              		.loc 1 96 0 discriminator 2
 383 001a 1BB1     		cbz	r3, .L37
  97:Src/bsp_usart.c **** 		{
  98:Src/bsp_usart.c **** 				pcUsart2RX.rflag = 1;
 384              		.loc 1 98 0 is_stmt 1
 385 001c 0122     		movs	r2, #1
 386 001e 024B     		ldr	r3, .L40
 387 0020 83F8D020 		strb	r2, [r3, #208]
 388              	.L37:
 389 0024 08BD     		pop	{r3, pc}
 390              	.L41:
 391 0026 00BF     		.align	2
 392              	.L40:
 393 0028 00000000 		.word	.LANCHOR1
 394              		.cfi_endproc
 395              	.LFE129:
 397              		.section	.text.fputc,"ax",%progbits
 398              		.align	1
 399              		.global	fputc
 400              		.syntax unified
 401              		.thumb
 402              		.thumb_func
 403              		.fpu fpv4-sp-d16
 405              	fputc:
 406              	.LFB130:
  99:Src/bsp_usart.c **** 		}
 100:Src/bsp_usart.c **** }
 101:Src/bsp_usart.c **** 
 102:Src/bsp_usart.c **** int fputc(int ch, FILE *f)
 103:Src/bsp_usart.c **** { 	
 407              		.loc 1 103 0
 408              		.cfi_startproc
 409              		@ args = 0, pretend = 0, frame = 0
 410              		@ frame_needed = 0, uses_anonymous_args = 0
 411              		@ link register save eliminated.
 412              	.LVL25:
 413              	.L43:
 104:Src/bsp_usart.c **** 	while((USART2->SR&0X40)==0);//循环发送,直到发送完毕   
 414              		.loc 1 104 0 discriminator 1
 415 0000 044B     		ldr	r3, .L44
 416 0002 1B68     		ldr	r3, [r3]
 417 0004 13F0400F 		tst	r3, #64
 418 0008 FAD0     		beq	.L43
 105:Src/bsp_usart.c **** 	USART2->DR = (uint8_t) ch;
 419              		.loc 1 105 0
ARM GAS  /tmp/ccRo4o9e.s 			page 10


 420 000a C2B2     		uxtb	r2, r0
 421 000c 014B     		ldr	r3, .L44
 422 000e 5A60     		str	r2, [r3, #4]
 106:Src/bsp_usart.c **** 	
 107:Src/bsp_usart.c **** 	return ch;
 108:Src/bsp_usart.c **** }
 423              		.loc 1 108 0
 424 0010 7047     		bx	lr
 425              	.L45:
 426 0012 00BF     		.align	2
 427              	.L44:
 428 0014 00440040 		.word	1073759232
 429              		.cfi_endproc
 430              	.LFE130:
 432              		.global	pcUsart2RX
 433              		.global	aRxbuf
 434              		.comm	uart2_hand_typedef,64,4
 435              		.section	.bss.aRxbuf,"aw",%nobits
 436              		.align	2
 437              		.set	.LANCHOR0,. + 0
 440              	aRxbuf:
 441 0000 00       		.space	1
 442              		.section	.bss.pcUsart2RX,"aw",%nobits
 443              		.align	2
 444              		.set	.LANCHOR1,. + 0
 447              	pcUsart2RX:
 448 0000 00000000 		.space	212
 448      00000000 
 448      00000000 
 448      00000000 
 448      00000000 
 449              		.text
 450              	.Letext0:
 451              		.file 2 "/usr/include/newlib/machine/_default_types.h"
 452              		.file 3 "/usr/include/newlib/sys/_stdint.h"
 453              		.file 4 "Drivers/CMSIS/Include/core_cm4.h"
 454              		.file 5 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/system_stm32f4xx.h"
 455              		.file 6 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f429xx.h"
 456              		.file 7 "/usr/include/newlib/sys/lock.h"
 457              		.file 8 "/usr/include/newlib/sys/_types.h"
 458              		.file 9 "/usr/lib/gcc/arm-none-eabi/6.3.1/include/stddef.h"
 459              		.file 10 "/usr/include/newlib/sys/reent.h"
 460              		.file 11 "/usr/include/newlib/stdio.h"
 461              		.file 12 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_def.h"
 462              		.file 13 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_gpio.h"
 463              		.file 14 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_dma.h"
 464              		.file 15 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_uart.h"
 465              		.file 16 "Src/bsp_usart.h"
 466              		.file 17 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal.h"
 467              		.file 18 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_cortex.h"
ARM GAS  /tmp/ccRo4o9e.s 			page 11


DEFINED SYMBOLS
                            *ABS*:0000000000000000 bsp_usart.c
     /tmp/ccRo4o9e.s:18     .text.ResetUartrRx:0000000000000000 $t
     /tmp/ccRo4o9e.s:25     .text.ResetUartrRx:0000000000000000 ResetUartrRx
     /tmp/ccRo4o9e.s:56     .text.USART2_Init:0000000000000000 $t
     /tmp/ccRo4o9e.s:63     .text.USART2_Init:0000000000000000 USART2_Init
     /tmp/ccRo4o9e.s:107    .text.USART2_Init:0000000000000030 $d
                            *COM*:0000000000000040 uart2_hand_typedef
     /tmp/ccRo4o9e.s:114    .text.HAL_UART_MspInit:0000000000000000 $t
     /tmp/ccRo4o9e.s:121    .text.HAL_UART_MspInit:0000000000000000 HAL_UART_MspInit
     /tmp/ccRo4o9e.s:216    .text.HAL_UART_MspInit:0000000000000078 $d
     /tmp/ccRo4o9e.s:222    .text.HAL_UART_RxCpltCallback:0000000000000000 $t
     /tmp/ccRo4o9e.s:229    .text.HAL_UART_RxCpltCallback:0000000000000000 HAL_UART_RxCpltCallback
     /tmp/ccRo4o9e.s:271    .text.HAL_UART_RxCpltCallback:0000000000000034 $d
     /tmp/ccRo4o9e.s:278    .text.USART2_IRQHandler:0000000000000000 $t
     /tmp/ccRo4o9e.s:285    .text.USART2_IRQHandler:0000000000000000 USART2_IRQHandler
     /tmp/ccRo4o9e.s:346    .text.USART2_IRQHandler:000000000000003c $d
     /tmp/ccRo4o9e.s:352    .text.HAL_SYSTICK_Callback:0000000000000000 $t
     /tmp/ccRo4o9e.s:359    .text.HAL_SYSTICK_Callback:0000000000000000 HAL_SYSTICK_Callback
     /tmp/ccRo4o9e.s:393    .text.HAL_SYSTICK_Callback:0000000000000028 $d
     /tmp/ccRo4o9e.s:398    .text.fputc:0000000000000000 $t
     /tmp/ccRo4o9e.s:405    .text.fputc:0000000000000000 fputc
     /tmp/ccRo4o9e.s:428    .text.fputc:0000000000000014 $d
     /tmp/ccRo4o9e.s:447    .bss.pcUsart2RX:0000000000000000 pcUsart2RX
     /tmp/ccRo4o9e.s:440    .bss.aRxbuf:0000000000000000 aRxbuf
     /tmp/ccRo4o9e.s:436    .bss.aRxbuf:0000000000000000 $d
     /tmp/ccRo4o9e.s:443    .bss.pcUsart2RX:0000000000000000 $d
                     .debug_frame:0000000000000010 $d

UNDEFINED SYMBOLS
memset
HAL_UART_Init
HAL_UART_Receive_IT
HAL_GPIO_Init
HAL_NVIC_EnableIRQ
HAL_NVIC_SetPriority
HAL_GetTick
HAL_UART_IRQHandler
HAL_UART_GetState
