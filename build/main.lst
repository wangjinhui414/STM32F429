ARM GAS  /tmp/cc6prtYI.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"main.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text._Error_Handler,"ax",%progbits
  18              		.align	1
  19              		.global	_Error_Handler
  20              		.syntax unified
  21              		.thumb
  22              		.thumb_func
  23              		.fpu fpv4-sp-d16
  25              	_Error_Handler:
  26              	.LFB126:
  27              		.file 1 "Src/main.c"
   1:Src/main.c    **** /**
   2:Src/main.c    ****   ******************************************************************************
   3:Src/main.c    ****   * File Name          : main.c
   4:Src/main.c    ****   * Description        : Main program body
   5:Src/main.c    ****   ******************************************************************************
   6:Src/main.c    ****   *
   7:Src/main.c    ****   * COPYRIGHT(c) 2016 STMicroelectronics
   8:Src/main.c    ****   *
   9:Src/main.c    ****   * Redistribution and use in source and binary forms, with or without modification,
  10:Src/main.c    ****   * are permitted provided that the following conditions are met:
  11:Src/main.c    ****   *   1. Redistributions of source code must retain the above copyright notice,
  12:Src/main.c    ****   *      this list of conditions and the following disclaimer.
  13:Src/main.c    ****   *   2. Redistributions in binary form must reproduce the above copyright notice,
  14:Src/main.c    ****   *      this list of conditions and the following disclaimer in the documentation
  15:Src/main.c    ****   *      and/or other materials provided with the distribution.
  16:Src/main.c    ****   *   3. Neither the name of STMicroelectronics nor the names of its contributors
  17:Src/main.c    ****   *      may be used to endorse or promote products derived from this software
  18:Src/main.c    ****   *      without specific prior written permission.
  19:Src/main.c    ****   *
  20:Src/main.c    ****   * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  21:Src/main.c    ****   * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  22:Src/main.c    ****   * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
  23:Src/main.c    ****   * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
  24:Src/main.c    ****   * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
  25:Src/main.c    ****   * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
  26:Src/main.c    ****   * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
  27:Src/main.c    ****   * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
  28:Src/main.c    ****   * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
  29:Src/main.c    ****   * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  30:Src/main.c    ****   *
  31:Src/main.c    ****   ******************************************************************************
ARM GAS  /tmp/cc6prtYI.s 			page 2


  32:Src/main.c    ****   */
  33:Src/main.c    **** /* Includes ------------------------------------------------------------------*/
  34:Src/main.c    **** #include "stm32f4xx_hal.h"
  35:Src/main.c    **** 
  36:Src/main.c    **** /* USER CODE BEGIN Includes */
  37:Src/main.c    **** #include "bsp_gpio.h"
  38:Src/main.c    **** #include "bsp_usart.h"
  39:Src/main.c    **** #include "bsp_tim.h"
  40:Src/main.c    **** #include "bsp_tpad.h"
  41:Src/main.c    **** #include "bsp_tftlcd.h"
  42:Src/main.c    **** #include "bsp_sdram.h"
  43:Src/main.c    **** #include "bsp_adc.h"
  44:Src/main.c    **** /* USER CODE END Includes */
  45:Src/main.c    **** 
  46:Src/main.c    **** /* Private variables ---------------------------------------------------------*/
  47:Src/main.c    **** 
  48:Src/main.c    **** /* USER CODE BEGIN PV */
  49:Src/main.c    **** /* Private variables ---------------------------------------------------------*/
  50:Src/main.c    **** 
  51:Src/main.c    **** /* USER CODE END PV */
  52:Src/main.c    **** 
  53:Src/main.c    **** /* Private function prototypes -----------------------------------------------*/
  54:Src/main.c    **** void SystemClock_Config(void);
  55:Src/main.c    **** //static void MX_GPIO_Init(void);
  56:Src/main.c    **** 
  57:Src/main.c    **** /* USER CODE BEGIN PFP */
  58:Src/main.c    **** /* Private function prototypes -----------------------------------------------*/
  59:Src/main.c    **** 
  60:Src/main.c    **** /* USER CODE END PFP */
  61:Src/main.c    **** 
  62:Src/main.c    **** /* USER CODE BEGIN 0 */
  63:Src/main.c    **** 
  64:Src/main.c    **** /* USER CODE END 0 */
  65:Src/main.c    **** 
  66:Src/main.c    **** int main(void)
  67:Src/main.c    **** {
  68:Src/main.c    **** 
  69:Src/main.c    ****   /* USER CODE BEGIN 1 */
  70:Src/main.c    **** //	uint8_t dir = 0;
  71:Src/main.c    **** //	uint32_t cout = 300;
  72:Src/main.c    ****   char sbuf[20]={0};
  73:Src/main.c    ****   int loopcout = 0;
  74:Src/main.c    ****   /* USER CODE END 1 */
  75:Src/main.c    **** 
  76:Src/main.c    ****   /* MCU Configuration----------------------------------------------------------*/
  77:Src/main.c    **** 
  78:Src/main.c    ****   /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
  79:Src/main.c    ****   HAL_Init();
  80:Src/main.c    **** 
  81:Src/main.c    ****   /* Configure the system clock */
  82:Src/main.c    ****   SystemClock_Config();
  83:Src/main.c    **** 
  84:Src/main.c    ****   /* Initialize all configured peripherals */
  85:Src/main.c    **** 
  86:Src/main.c    ****   /* USER CODE BEGIN 2 */
  87:Src/main.c    ****   LED_Init();
  88:Src/main.c    ****   KEY_Init();
ARM GAS  /tmp/cc6prtYI.s 			page 3


  89:Src/main.c    ****   //LED_Lignt1();
  90:Src/main.c    ****   USART2_Init();
  91:Src/main.c    ****   printf("***********SYSTEM INIT***********\n");
  92:Src/main.c    ****   TPAD_Init();
  93:Src/main.c    ****   LCD_Init();
  94:Src/main.c    ****   SDRAM_Init();
  95:Src/main.c    ****   RNG_Init();
  96:Src/main.c    ****   ADC_Init();
  97:Src/main.c    ****   //TIM3_Init_Timer();
  98:Src/main.c    ****   //TIM3_Init_Pwm_CH4();
  99:Src/main.c    ****   //IWDG_Init();
 100:Src/main.c    ****   sprintf((char*)sbuf,"LCD ID:%04X",lcddev.id);//将LCD ID打印到lcd_id数组。
 101:Src/main.c    ****   LCD_ShowString(10,40,240,32,32,"Apollo STM32F4/F7"); 	
 102:Src/main.c    ****   LCD_ShowString(10,80,240,24,24,"TFTLCD TEST");
 103:Src/main.c    ****   LCD_ShowString(10,110,240,16,16,"ATOM@ALIENTEK");
 104:Src/main.c    ****   LCD_ShowString(10,130,240,16,16,sbuf);		//显示LCD ID	      					 
 105:Src/main.c    ****   LCD_ShowString(10,150,240,12,12,"2018/10/6");
 106:Src/main.c    **** 
 107:Src/main.c    ****   /* USER CODE END 2 */
 108:Src/main.c    ****   /* Infinite loop */
 109:Src/main.c    ****   /* USER CODE BEGIN WHILE */
 110:Src/main.c    ****   while (1)
 111:Src/main.c    ****   {
 112:Src/main.c    **** 	/* USER CODE END WHILE */
 113:Src/main.c    **** 			
 114:Src/main.c    **** 	/* USER CODE BEGIN 3 */
 115:Src/main.c    ****      /***********************串口通讯实验和指令处理***********************/
 116:Src/main.c    ****     if(pcUsart2RX.rflag == 1)
 117:Src/main.c    ****     {
 118:Src/main.c    ****       printf("%s (OK)\n",pcUsart2RX.pcRxbuf);
 119:Src/main.c    ****       if( strncmp((char*)pcUsart2RX.pcRxbuf,"LED_CHANGE",strlen("LED_CHANGE"))==0)
 120:Src/main.c    ****       {
 121:Src/main.c    ****         if(GPIO_PIN_SET == HAL_GPIO_ReadPin(GPIOB ,GPIO_PIN_0))
 122:Src/main.c    ****         {
 123:Src/main.c    ****           HAL_GPIO_WritePin(GPIOB ,GPIO_PIN_0 , GPIO_PIN_RESET);
 124:Src/main.c    ****           printf("LED_ON\n");
 125:Src/main.c    ****         }
 126:Src/main.c    ****         else
 127:Src/main.c    ****         {
 128:Src/main.c    ****             HAL_GPIO_WritePin(GPIOB ,GPIO_PIN_0 , GPIO_PIN_SET);
 129:Src/main.c    ****             printf("LED_OFF\n");
 130:Src/main.c    ****         }			
 131:Src/main.c    ****       }
 132:Src/main.c    ****       else if( strncmp((char*)pcUsart2RX.pcRxbuf,"SDRAM_TEST",strlen("SDRAM_TEST"))==0)
 133:Src/main.c    ****       {
 134:Src/main.c    ****           fsmc_sdram_test(30,170);//测试SRAM容量
 135:Src/main.c    ****       }
 136:Src/main.c    ****       else if(strncmp((char*)pcUsart2RX.pcRxbuf,"SDRAM_PRINT",strlen("SDRAM_PRINT"))==0)
 137:Src/main.c    ****       {
 138:Src/main.c    ****            char buf[100]="SDRAM TEST STRING!!";
 139:Src/main.c    ****            printf("Write:%s\n",buf);
 140:Src/main.c    ****            FMC_SDRAM_WriteBuffer((uint8_t*)buf,0,strlen(buf));
 141:Src/main.c    ****            memset(buf,0,100);
 142:Src/main.c    ****            FMC_SDRAM_ReadBuffer((uint8_t*)buf,0,100);
 143:Src/main.c    ****            printf("Read:%s\n",buf);    
 144:Src/main.c    ****       }
 145:Src/main.c    ****       ResetUartrRx(&pcUsart2RX);
ARM GAS  /tmp/cc6prtYI.s 			page 4


 146:Src/main.c    ****     }
 147:Src/main.c    ****     /***********************触摸按键实验***********************/
 148:Src/main.c    ****     if(TPAD_Scan(0))
 149:Src/main.c    ****     {
 150:Src/main.c    ****       if(GPIO_PIN_SET == HAL_GPIO_ReadPin(GPIOB ,GPIO_PIN_0))
 151:Src/main.c    ****       {
 152:Src/main.c    ****         HAL_GPIO_WritePin(GPIOB ,GPIO_PIN_0 , GPIO_PIN_RESET);
 153:Src/main.c    ****       }
 154:Src/main.c    ****       else
 155:Src/main.c    ****       {
 156:Src/main.c    ****           HAL_GPIO_WritePin(GPIOB ,GPIO_PIN_0 , GPIO_PIN_SET);
 157:Src/main.c    ****       }		        	
 158:Src/main.c    ****     }
 159:Src/main.c    ****     if(loopcout>=30)
 160:Src/main.c    ****     {
 161:Src/main.c    ****       /***********************RNG 实验******************************/
 162:Src/main.c    ****       char snumbuf[20];
 163:Src/main.c    ****       sprintf(snumbuf,"rondom:%03d",RNG_Get_RandomRange(0,100));
 164:Src/main.c    ****       LCD_ShowString(10,170,240,32,32,snumbuf);
 165:Src/main.c    ****       memset(snumbuf,0,20);
 166:Src/main.c    ****       /***********************ADC 内部温度实验***********************/
 167:Src/main.c    ****       double temp = Get_Temprate();
 168:Src/main.c    ****       sprintf(snumbuf,"adc:%d.%d C",(int)temp,(int)(temp*100)%100);
 169:Src/main.c    ****       LCD_ShowString(10,200,240,32,32,snumbuf);
 170:Src/main.c    ****       loopcout = 0;
 171:Src/main.c    ****     }
 172:Src/main.c    ****     HAL_Delay(10);
 173:Src/main.c    ****     loopcout++;
 174:Src/main.c    **** //			if(!dir)	cout--;
 175:Src/main.c    **** //			else cout++;
 176:Src/main.c    **** //			if(cout == 0)	dir =1;
 177:Src/main.c    **** //			if(cout >= 300) dir = 0;
 178:Src/main.c    **** //			TIM3_Set_Compare_CH4(cout);
 179:Src/main.c    **** //			HAL_Delay(10);
 180:Src/main.c    **** 			
 181:Src/main.c    ****   }
 182:Src/main.c    ****   /* USER CODE END 3 */
 183:Src/main.c    **** 
 184:Src/main.c    **** }
 185:Src/main.c    **** 
 186:Src/main.c    **** /** System Clock Configuration
 187:Src/main.c    **** */
 188:Src/main.c    **** void SystemClock_Config(void)
 189:Src/main.c    **** {
 190:Src/main.c    **** 
 191:Src/main.c    **** 	RCC_OscInitTypeDef RCC_OscInitStruct;
 192:Src/main.c    ****   RCC_ClkInitTypeDef RCC_ClkInitStruct;
 193:Src/main.c    **** 
 194:Src/main.c    ****     /**Configure the main internal regulator output voltage 
 195:Src/main.c    ****     */
 196:Src/main.c    ****   __HAL_RCC_PWR_CLK_ENABLE();
 197:Src/main.c    **** 
 198:Src/main.c    ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 199:Src/main.c    **** 
 200:Src/main.c    ****     /**Initializes the CPU, AHB and APB busses clocks 
 201:Src/main.c    ****     */
 202:Src/main.c    ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSE;
ARM GAS  /tmp/cc6prtYI.s 			page 5


 203:Src/main.c    ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 204:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 205:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 206:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLM = 25;
 207:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLN = 360;
 208:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 209:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLQ = 4;
 210:Src/main.c    ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 211:Src/main.c    ****   {
 212:Src/main.c    ****     _Error_Handler(__FILE__, __LINE__);
 213:Src/main.c    ****   }
 214:Src/main.c    **** 
 215:Src/main.c    ****     /**Activate the Over-Drive mode 
 216:Src/main.c    ****     */
 217:Src/main.c    ****   if (HAL_PWREx_EnableOverDrive() != HAL_OK)
 218:Src/main.c    ****   {
 219:Src/main.c    ****     _Error_Handler(__FILE__, __LINE__);
 220:Src/main.c    ****   }
 221:Src/main.c    **** 
 222:Src/main.c    ****     /**Initializes the CPU, AHB and APB busses clocks 
 223:Src/main.c    ****     */
 224:Src/main.c    ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 225:Src/main.c    ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 226:Src/main.c    ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 227:Src/main.c    ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 228:Src/main.c    ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV4;
 229:Src/main.c    ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;
 230:Src/main.c    **** 
 231:Src/main.c    ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_5) != HAL_OK)
 232:Src/main.c    ****   {
 233:Src/main.c    ****     _Error_Handler(__FILE__, __LINE__);
 234:Src/main.c    ****   }
 235:Src/main.c    **** 
 236:Src/main.c    ****     /**Configure the Systick interrupt time 
 237:Src/main.c    ****     */
 238:Src/main.c    ****   HAL_SYSTICK_Config(HAL_RCC_GetHCLKFreq()/1000);
 239:Src/main.c    **** 
 240:Src/main.c    ****     /**Configure the Systick 
 241:Src/main.c    ****     */
 242:Src/main.c    ****   HAL_SYSTICK_CLKSourceConfig(SYSTICK_CLKSOURCE_HCLK);
 243:Src/main.c    **** 
 244:Src/main.c    ****   /* SysTick_IRQn interrupt configuration */
 245:Src/main.c    ****   HAL_NVIC_SetPriority(SysTick_IRQn, 0, 0);
 246:Src/main.c    **** }
 247:Src/main.c    **** 
 248:Src/main.c    **** /**
 249:Src/main.c    ****   * @brief  This function is executed in case of error occurrence.
 250:Src/main.c    ****   * @param  file: The file name as string.
 251:Src/main.c    ****   * @param  line: The line in file as a number.
 252:Src/main.c    ****   * @retval None
 253:Src/main.c    ****   */
 254:Src/main.c    **** void _Error_Handler(char *file, int line)
 255:Src/main.c    **** {
  28              		.loc 1 255 0
  29              		.cfi_startproc
  30              		@ Volatile: function does not return.
  31              		@ args = 0, pretend = 0, frame = 0
ARM GAS  /tmp/cc6prtYI.s 			page 6


  32              		@ frame_needed = 0, uses_anonymous_args = 0
  33              		@ link register save eliminated.
  34              	.LVL0:
  35              	.L2:
  36 0000 FEE7     		b	.L2
  37              		.cfi_endproc
  38              	.LFE126:
  40              		.section	.text.SystemClock_Config,"ax",%progbits
  41              		.align	1
  42              		.global	SystemClock_Config
  43              		.syntax unified
  44              		.thumb
  45              		.thumb_func
  46              		.fpu fpv4-sp-d16
  48              	SystemClock_Config:
  49              	.LFB125:
 189:Src/main.c    **** 
  50              		.loc 1 189 0
  51              		.cfi_startproc
  52              		@ args = 0, pretend = 0, frame = 80
  53              		@ frame_needed = 0, uses_anonymous_args = 0
 189:Src/main.c    **** 
  54              		.loc 1 189 0
  55 0000 00B5     		push	{lr}
  56              	.LCFI0:
  57              		.cfi_def_cfa_offset 4
  58              		.cfi_offset 14, -4
  59 0002 95B0     		sub	sp, sp, #84
  60              	.LCFI1:
  61              		.cfi_def_cfa_offset 88
  62              	.LBB2:
 196:Src/main.c    **** 
  63              		.loc 1 196 0
  64 0004 0021     		movs	r1, #0
  65 0006 0191     		str	r1, [sp, #4]
  66 0008 2F4B     		ldr	r3, .L11
  67 000a 1A6C     		ldr	r2, [r3, #64]
  68 000c 42F08052 		orr	r2, r2, #268435456
  69 0010 1A64     		str	r2, [r3, #64]
  70 0012 1B6C     		ldr	r3, [r3, #64]
  71 0014 03F08053 		and	r3, r3, #268435456
  72 0018 0193     		str	r3, [sp, #4]
  73 001a 019B     		ldr	r3, [sp, #4]
  74              	.LBE2:
  75              	.LBB3:
 198:Src/main.c    **** 
  76              		.loc 1 198 0
  77 001c 0291     		str	r1, [sp, #8]
  78 001e 2B4B     		ldr	r3, .L11+4
  79 0020 1A68     		ldr	r2, [r3]
  80 0022 42F44042 		orr	r2, r2, #49152
  81 0026 1A60     		str	r2, [r3]
  82 0028 1B68     		ldr	r3, [r3]
  83 002a 03F44043 		and	r3, r3, #49152
  84 002e 0293     		str	r3, [sp, #8]
  85 0030 029B     		ldr	r3, [sp, #8]
  86              	.LBE3:
ARM GAS  /tmp/cc6prtYI.s 			page 7


 202:Src/main.c    ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
  87              		.loc 1 202 0
  88 0032 0123     		movs	r3, #1
  89 0034 0893     		str	r3, [sp, #32]
 203:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
  90              		.loc 1 203 0
  91 0036 4FF48033 		mov	r3, #65536
  92 003a 0993     		str	r3, [sp, #36]
 204:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
  93              		.loc 1 204 0
  94 003c 0223     		movs	r3, #2
  95 003e 0E93     		str	r3, [sp, #56]
 205:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLM = 25;
  96              		.loc 1 205 0
  97 0040 4FF48002 		mov	r2, #4194304
  98 0044 0F92     		str	r2, [sp, #60]
 206:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLN = 360;
  99              		.loc 1 206 0
 100 0046 1922     		movs	r2, #25
 101 0048 1092     		str	r2, [sp, #64]
 207:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 102              		.loc 1 207 0
 103 004a 4FF4B472 		mov	r2, #360
 104 004e 1192     		str	r2, [sp, #68]
 208:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLQ = 4;
 105              		.loc 1 208 0
 106 0050 1293     		str	r3, [sp, #72]
 209:Src/main.c    ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 107              		.loc 1 209 0
 108 0052 0423     		movs	r3, #4
 109 0054 1393     		str	r3, [sp, #76]
 210:Src/main.c    ****   {
 110              		.loc 1 210 0
 111 0056 08A8     		add	r0, sp, #32
 112 0058 FFF7FEFF 		bl	HAL_RCC_OscConfig
 113              	.LVL1:
 114 005c 38BB     		cbnz	r0, .L8
 217:Src/main.c    ****   {
 115              		.loc 1 217 0
 116 005e FFF7FEFF 		bl	HAL_PWREx_EnableOverDrive
 117              	.LVL2:
 118 0062 40BB     		cbnz	r0, .L9
 224:Src/main.c    ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 119              		.loc 1 224 0
 120 0064 0F23     		movs	r3, #15
 121 0066 0393     		str	r3, [sp, #12]
 226:Src/main.c    ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 122              		.loc 1 226 0
 123 0068 0223     		movs	r3, #2
 124 006a 0493     		str	r3, [sp, #16]
 227:Src/main.c    ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV4;
 125              		.loc 1 227 0
 126 006c 0023     		movs	r3, #0
 127 006e 0593     		str	r3, [sp, #20]
 228:Src/main.c    ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;
 128              		.loc 1 228 0
 129 0070 4FF4A053 		mov	r3, #5120
ARM GAS  /tmp/cc6prtYI.s 			page 8


 130 0074 0693     		str	r3, [sp, #24]
 229:Src/main.c    **** 
 131              		.loc 1 229 0
 132 0076 4FF48053 		mov	r3, #4096
 133 007a 0793     		str	r3, [sp, #28]
 231:Src/main.c    ****   {
 134              		.loc 1 231 0
 135 007c 0521     		movs	r1, #5
 136 007e 03A8     		add	r0, sp, #12
 137 0080 FFF7FEFF 		bl	HAL_RCC_ClockConfig
 138              	.LVL3:
 139 0084 D8B9     		cbnz	r0, .L10
 238:Src/main.c    **** 
 140              		.loc 1 238 0
 141 0086 FFF7FEFF 		bl	HAL_RCC_GetHCLKFreq
 142              	.LVL4:
 143 008a 114B     		ldr	r3, .L11+8
 144 008c A3FB0030 		umull	r3, r0, r3, r0
 145 0090 8009     		lsrs	r0, r0, #6
 146 0092 FFF7FEFF 		bl	HAL_SYSTICK_Config
 147              	.LVL5:
 242:Src/main.c    **** 
 148              		.loc 1 242 0
 149 0096 0420     		movs	r0, #4
 150 0098 FFF7FEFF 		bl	HAL_SYSTICK_CLKSourceConfig
 151              	.LVL6:
 245:Src/main.c    **** }
 152              		.loc 1 245 0
 153 009c 0022     		movs	r2, #0
 154 009e 1146     		mov	r1, r2
 155 00a0 4FF0FF30 		mov	r0, #-1
 156 00a4 FFF7FEFF 		bl	HAL_NVIC_SetPriority
 157              	.LVL7:
 246:Src/main.c    **** 
 158              		.loc 1 246 0
 159 00a8 15B0     		add	sp, sp, #84
 160              	.LCFI2:
 161              		.cfi_remember_state
 162              		.cfi_def_cfa_offset 4
 163              		@ sp needed
 164 00aa 5DF804FB 		ldr	pc, [sp], #4
 165              	.L8:
 166              	.LCFI3:
 167              		.cfi_restore_state
 212:Src/main.c    ****   }
 168              		.loc 1 212 0
 169 00ae D421     		movs	r1, #212
 170 00b0 0848     		ldr	r0, .L11+12
 171 00b2 FFF7FEFF 		bl	_Error_Handler
 172              	.LVL8:
 173              	.L9:
 219:Src/main.c    ****   }
 174              		.loc 1 219 0
 175 00b6 DB21     		movs	r1, #219
 176 00b8 0648     		ldr	r0, .L11+12
 177 00ba FFF7FEFF 		bl	_Error_Handler
 178              	.LVL9:
ARM GAS  /tmp/cc6prtYI.s 			page 9


 179              	.L10:
 233:Src/main.c    ****   }
 180              		.loc 1 233 0
 181 00be E921     		movs	r1, #233
 182 00c0 0448     		ldr	r0, .L11+12
 183 00c2 FFF7FEFF 		bl	_Error_Handler
 184              	.LVL10:
 185              	.L12:
 186 00c6 00BF     		.align	2
 187              	.L11:
 188 00c8 00380240 		.word	1073887232
 189 00cc 00700040 		.word	1073770496
 190 00d0 D34D6210 		.word	274877907
 191 00d4 00000000 		.word	.LC0
 192              		.cfi_endproc
 193              	.LFE125:
 195              		.global	__aeabi_dmul
 196              		.global	__aeabi_d2iz
 197              		.section	.text.main,"ax",%progbits
 198              		.align	1
 199              		.global	main
 200              		.syntax unified
 201              		.thumb
 202              		.thumb_func
 203              		.fpu fpv4-sp-d16
 205              	main:
 206              	.LFB124:
  67:Src/main.c    **** 
 207              		.loc 1 67 0
 208              		.cfi_startproc
 209              		@ args = 0, pretend = 0, frame = 120
 210              		@ frame_needed = 0, uses_anonymous_args = 0
 211 0000 2DE9704D 		push	{r4, r5, r6, r8, r10, fp, lr}
 212              	.LCFI4:
 213              		.cfi_def_cfa_offset 28
 214              		.cfi_offset 4, -28
 215              		.cfi_offset 5, -24
 216              		.cfi_offset 6, -20
 217              		.cfi_offset 8, -16
 218              		.cfi_offset 10, -12
 219              		.cfi_offset 11, -8
 220              		.cfi_offset 14, -4
 221 0004 A1B0     		sub	sp, sp, #132
 222              	.LCFI5:
 223              		.cfi_def_cfa_offset 160
  72:Src/main.c    ****   int loopcout = 0;
 224              		.loc 1 72 0
 225 0006 1BAD     		add	r5, sp, #108
 226 0008 0024     		movs	r4, #0
 227 000a 1B94     		str	r4, [sp, #108]
 228 000c 1C94     		str	r4, [sp, #112]
 229 000e 1D94     		str	r4, [sp, #116]
 230 0010 1E94     		str	r4, [sp, #120]
 231 0012 1F94     		str	r4, [sp, #124]
 232              	.LVL11:
  79:Src/main.c    **** 
 233              		.loc 1 79 0
ARM GAS  /tmp/cc6prtYI.s 			page 10


 234 0014 FFF7FEFF 		bl	HAL_Init
 235              	.LVL12:
  82:Src/main.c    **** 
 236              		.loc 1 82 0
 237 0018 FFF7FEFF 		bl	SystemClock_Config
 238              	.LVL13:
  87:Src/main.c    ****   KEY_Init();
 239              		.loc 1 87 0
 240 001c FFF7FEFF 		bl	LED_Init
 241              	.LVL14:
  88:Src/main.c    ****   //LED_Lignt1();
 242              		.loc 1 88 0
 243 0020 FFF7FEFF 		bl	KEY_Init
 244              	.LVL15:
  90:Src/main.c    ****   printf("***********SYSTEM INIT***********\n");
 245              		.loc 1 90 0
 246 0024 FFF7FEFF 		bl	USART2_Init
 247              	.LVL16:
  91:Src/main.c    ****   TPAD_Init();
 248              		.loc 1 91 0
 249 0028 8348     		ldr	r0, .L31
 250 002a FFF7FEFF 		bl	puts
 251              	.LVL17:
  92:Src/main.c    ****   LCD_Init();
 252              		.loc 1 92 0
 253 002e FFF7FEFF 		bl	TPAD_Init
 254              	.LVL18:
  93:Src/main.c    ****   SDRAM_Init();
 255              		.loc 1 93 0
 256 0032 FFF7FEFF 		bl	LCD_Init
 257              	.LVL19:
  94:Src/main.c    ****   RNG_Init();
 258              		.loc 1 94 0
 259 0036 FFF7FEFF 		bl	SDRAM_Init
 260              	.LVL20:
  95:Src/main.c    ****   ADC_Init();
 261              		.loc 1 95 0
 262 003a FFF7FEFF 		bl	RNG_Init
 263              	.LVL21:
  96:Src/main.c    ****   //TIM3_Init_Timer();
 264              		.loc 1 96 0
 265 003e FFF7FEFF 		bl	ADC_Init
 266              	.LVL22:
 100:Src/main.c    ****   LCD_ShowString(10,40,240,32,32,"Apollo STM32F4/F7"); 	
 267              		.loc 1 100 0
 268 0042 7E4B     		ldr	r3, .L31+4
 269 0044 9A88     		ldrh	r2, [r3, #4]
 270 0046 7E49     		ldr	r1, .L31+8
 271 0048 2846     		mov	r0, r5
 272 004a FFF7FEFF 		bl	sprintf
 273              	.LVL23:
 101:Src/main.c    ****   LCD_ShowString(10,80,240,24,24,"TFTLCD TEST");
 274              		.loc 1 101 0
 275 004e 7D4B     		ldr	r3, .L31+12
 276 0050 0193     		str	r3, [sp, #4]
 277 0052 2023     		movs	r3, #32
 278 0054 0093     		str	r3, [sp]
ARM GAS  /tmp/cc6prtYI.s 			page 11


 279 0056 F022     		movs	r2, #240
 280 0058 2821     		movs	r1, #40
 281 005a 0A20     		movs	r0, #10
 282 005c FFF7FEFF 		bl	LCD_ShowString
 283              	.LVL24:
 102:Src/main.c    ****   LCD_ShowString(10,110,240,16,16,"ATOM@ALIENTEK");
 284              		.loc 1 102 0
 285 0060 794B     		ldr	r3, .L31+16
 286 0062 0193     		str	r3, [sp, #4]
 287 0064 1823     		movs	r3, #24
 288 0066 0093     		str	r3, [sp]
 289 0068 F022     		movs	r2, #240
 290 006a 5021     		movs	r1, #80
 291 006c 0A20     		movs	r0, #10
 292 006e FFF7FEFF 		bl	LCD_ShowString
 293              	.LVL25:
 103:Src/main.c    ****   LCD_ShowString(10,130,240,16,16,sbuf);		//显示LCD ID	      					 
 294              		.loc 1 103 0
 295 0072 764B     		ldr	r3, .L31+20
 296 0074 0193     		str	r3, [sp, #4]
 297 0076 1026     		movs	r6, #16
 298 0078 0096     		str	r6, [sp]
 299 007a 3346     		mov	r3, r6
 300 007c F022     		movs	r2, #240
 301 007e 6E21     		movs	r1, #110
 302 0080 0A20     		movs	r0, #10
 303 0082 FFF7FEFF 		bl	LCD_ShowString
 304              	.LVL26:
 104:Src/main.c    ****   LCD_ShowString(10,150,240,12,12,"2018/10/6");
 305              		.loc 1 104 0
 306 0086 0195     		str	r5, [sp, #4]
 307 0088 0096     		str	r6, [sp]
 308 008a 3346     		mov	r3, r6
 309 008c F022     		movs	r2, #240
 310 008e 8221     		movs	r1, #130
 311 0090 0A20     		movs	r0, #10
 312 0092 FFF7FEFF 		bl	LCD_ShowString
 313              	.LVL27:
 105:Src/main.c    **** 
 314              		.loc 1 105 0
 315 0096 6E4B     		ldr	r3, .L31+24
 316 0098 0193     		str	r3, [sp, #4]
 317 009a 0C23     		movs	r3, #12
 318 009c 0093     		str	r3, [sp]
 319 009e F022     		movs	r2, #240
 320 00a0 9621     		movs	r1, #150
 321 00a2 0A20     		movs	r0, #10
 322 00a4 FFF7FEFF 		bl	LCD_ShowString
 323              	.LVL28:
 324 00a8 77E0     		b	.L22
 325              	.LVL29:
 326              	.L29:
 118:Src/main.c    ****       if( strncmp((char*)pcUsart2RX.pcRxbuf,"LED_CHANGE",strlen("LED_CHANGE"))==0)
 327              		.loc 1 118 0
 328 00aa 6A4D     		ldr	r5, .L31+28
 329 00ac 2946     		mov	r1, r5
 330 00ae 6A48     		ldr	r0, .L31+32
ARM GAS  /tmp/cc6prtYI.s 			page 12


 331 00b0 FFF7FEFF 		bl	printf
 332              	.LVL30:
 119:Src/main.c    ****       {
 333              		.loc 1 119 0
 334 00b4 0A22     		movs	r2, #10
 335 00b6 6949     		ldr	r1, .L31+36
 336 00b8 2846     		mov	r0, r5
 337 00ba FFF7FEFF 		bl	strncmp
 338              	.LVL31:
 339 00be 78B1     		cbz	r0, .L24
 132:Src/main.c    ****       {
 340              		.loc 1 132 0
 341 00c0 0A22     		movs	r2, #10
 342 00c2 6749     		ldr	r1, .L31+40
 343 00c4 6348     		ldr	r0, .L31+28
 344 00c6 FFF7FEFF 		bl	strncmp
 345              	.LVL32:
 346 00ca 20B3     		cbz	r0, .L25
 136:Src/main.c    ****       {
 347              		.loc 1 136 0
 348 00cc 0B22     		movs	r2, #11
 349 00ce 6549     		ldr	r1, .L31+44
 350 00d0 6048     		ldr	r0, .L31+28
 351 00d2 FFF7FEFF 		bl	strncmp
 352              	.LVL33:
 353 00d6 18B3     		cbz	r0, .L26
 354              	.L17:
 145:Src/main.c    ****     }
 355              		.loc 1 145 0
 356 00d8 5E48     		ldr	r0, .L31+28
 357 00da FFF7FEFF 		bl	ResetUartrRx
 358              	.LVL34:
 359 00de 61E0     		b	.L14
 360              	.L24:
 121:Src/main.c    ****         {
 361              		.loc 1 121 0
 362 00e0 0121     		movs	r1, #1
 363 00e2 00F18040 		add	r0, r0, #1073741824
 364 00e6 00F50130 		add	r0, r0, #132096
 365 00ea FFF7FEFF 		bl	HAL_GPIO_ReadPin
 366              	.LVL35:
 367 00ee 0128     		cmp	r0, #1
 368 00f0 08D0     		beq	.L27
 128:Src/main.c    ****             printf("LED_OFF\n");
 369              		.loc 1 128 0
 370 00f2 0122     		movs	r2, #1
 371 00f4 1146     		mov	r1, r2
 372 00f6 5C48     		ldr	r0, .L31+48
 373 00f8 FFF7FEFF 		bl	HAL_GPIO_WritePin
 374              	.LVL36:
 129:Src/main.c    ****         }			
 375              		.loc 1 129 0
 376 00fc 5B48     		ldr	r0, .L31+52
 377 00fe FFF7FEFF 		bl	puts
 378              	.LVL37:
 379 0102 E9E7     		b	.L17
 380              	.L27:
ARM GAS  /tmp/cc6prtYI.s 			page 13


 123:Src/main.c    ****           printf("LED_ON\n");
 381              		.loc 1 123 0
 382 0104 0022     		movs	r2, #0
 383 0106 0121     		movs	r1, #1
 384 0108 5748     		ldr	r0, .L31+48
 385 010a FFF7FEFF 		bl	HAL_GPIO_WritePin
 386              	.LVL38:
 124:Src/main.c    ****         }
 387              		.loc 1 124 0
 388 010e 5848     		ldr	r0, .L31+56
 389 0110 FFF7FEFF 		bl	puts
 390              	.LVL39:
 391 0114 E0E7     		b	.L17
 392              	.L25:
 134:Src/main.c    ****       }
 393              		.loc 1 134 0
 394 0116 AA21     		movs	r1, #170
 395 0118 1E20     		movs	r0, #30
 396 011a FFF7FEFF 		bl	fsmc_sdram_test
 397              	.LVL40:
 398 011e DBE7     		b	.L17
 399              	.L26:
 400              	.LBB4:
 138:Src/main.c    ****            printf("Write:%s\n",buf);
 401              		.loc 1 138 0
 402 0120 02AD     		add	r5, sp, #8
 403 0122 544E     		ldr	r6, .L31+60
 404 0124 0FCE     		ldmia	r6!, {r0, r1, r2, r3}
 405 0126 0FC5     		stmia	r5!, {r0, r1, r2, r3}
 406 0128 3368     		ldr	r3, [r6]
 407 012a 2B60     		str	r3, [r5]
 408 012c 5022     		movs	r2, #80
 409 012e 0021     		movs	r1, #0
 410 0130 07A8     		add	r0, sp, #28
 411 0132 FFF7FEFF 		bl	memset
 412              	.LVL41:
 139:Src/main.c    ****            FMC_SDRAM_WriteBuffer((uint8_t*)buf,0,strlen(buf));
 413              		.loc 1 139 0
 414 0136 02A9     		add	r1, sp, #8
 415 0138 4F48     		ldr	r0, .L31+64
 416 013a FFF7FEFF 		bl	printf
 417              	.LVL42:
 140:Src/main.c    ****            memset(buf,0,100);
 418              		.loc 1 140 0
 419 013e 02A8     		add	r0, sp, #8
 420 0140 FFF7FEFF 		bl	strlen
 421              	.LVL43:
 422 0144 0246     		mov	r2, r0
 423 0146 0021     		movs	r1, #0
 424 0148 02A8     		add	r0, sp, #8
 425 014a FFF7FEFF 		bl	FMC_SDRAM_WriteBuffer
 426              	.LVL44:
 141:Src/main.c    ****            FMC_SDRAM_ReadBuffer((uint8_t*)buf,0,100);
 427              		.loc 1 141 0
 428 014e 6425     		movs	r5, #100
 429 0150 2A46     		mov	r2, r5
 430 0152 0021     		movs	r1, #0
ARM GAS  /tmp/cc6prtYI.s 			page 14


 431 0154 02A8     		add	r0, sp, #8
 432 0156 FFF7FEFF 		bl	memset
 433              	.LVL45:
 142:Src/main.c    ****            printf("Read:%s\n",buf);    
 434              		.loc 1 142 0
 435 015a 2A46     		mov	r2, r5
 436 015c 0021     		movs	r1, #0
 437 015e 02A8     		add	r0, sp, #8
 438 0160 FFF7FEFF 		bl	FMC_SDRAM_ReadBuffer
 439              	.LVL46:
 143:Src/main.c    ****       }
 440              		.loc 1 143 0
 441 0164 02A9     		add	r1, sp, #8
 442 0166 4548     		ldr	r0, .L31+68
 443 0168 FFF7FEFF 		bl	printf
 444              	.LVL47:
 445 016c B4E7     		b	.L17
 446              	.L30:
 447              	.LBE4:
 150:Src/main.c    ****       {
 448              		.loc 1 150 0
 449 016e 0121     		movs	r1, #1
 450 0170 3D48     		ldr	r0, .L31+48
 451 0172 FFF7FEFF 		bl	HAL_GPIO_ReadPin
 452              	.LVL48:
 453 0176 0128     		cmp	r0, #1
 454 0178 05D0     		beq	.L28
 156:Src/main.c    ****       }		        	
 455              		.loc 1 156 0
 456 017a 0122     		movs	r2, #1
 457 017c 1146     		mov	r1, r2
 458 017e 3A48     		ldr	r0, .L31+48
 459 0180 FFF7FEFF 		bl	HAL_GPIO_WritePin
 460              	.LVL49:
 461 0184 13E0     		b	.L19
 462              	.L28:
 152:Src/main.c    ****       }
 463              		.loc 1 152 0
 464 0186 0022     		movs	r2, #0
 465 0188 0121     		movs	r1, #1
 466 018a 3748     		ldr	r0, .L31+48
 467 018c FFF7FEFF 		bl	HAL_GPIO_WritePin
 468              	.LVL50:
 469 0190 0DE0     		b	.L19
 470              	.LVL51:
 471              	.L21:
 172:Src/main.c    ****     loopcout++;
 472              		.loc 1 172 0
 473 0192 0A20     		movs	r0, #10
 474 0194 FFF7FEFF 		bl	HAL_Delay
 475              	.LVL52:
 173:Src/main.c    **** //			if(!dir)	cout--;
 476              		.loc 1 173 0
 477 0198 0134     		adds	r4, r4, #1
 478              	.LVL53:
 479              	.L22:
 116:Src/main.c    ****     {
ARM GAS  /tmp/cc6prtYI.s 			page 15


 480              		.loc 1 116 0
 481 019a 2E4B     		ldr	r3, .L31+28
 482 019c 93F8D030 		ldrb	r3, [r3, #208]	@ zero_extendqisi2
 483 01a0 012B     		cmp	r3, #1
 484 01a2 82D0     		beq	.L29
 485              	.L14:
 148:Src/main.c    ****     {
 486              		.loc 1 148 0
 487 01a4 0020     		movs	r0, #0
 488 01a6 FFF7FEFF 		bl	TPAD_Scan
 489              	.LVL54:
 490 01aa 0028     		cmp	r0, #0
 491 01ac DFD1     		bne	.L30
 492              	.L19:
 159:Src/main.c    ****     {
 493              		.loc 1 159 0
 494 01ae 1D2C     		cmp	r4, #29
 495 01b0 EFDD     		ble	.L21
 496              	.LBB5:
 163:Src/main.c    ****       LCD_ShowString(10,170,240,32,32,snumbuf);
 497              		.loc 1 163 0
 498 01b2 6421     		movs	r1, #100
 499 01b4 0020     		movs	r0, #0
 500 01b6 FFF7FEFF 		bl	RNG_Get_RandomRange
 501              	.LVL55:
 502 01ba 02AD     		add	r5, sp, #8
 503 01bc 0246     		mov	r2, r0
 504 01be 3049     		ldr	r1, .L31+72
 505 01c0 2846     		mov	r0, r5
 506 01c2 FFF7FEFF 		bl	sprintf
 507              	.LVL56:
 164:Src/main.c    ****       memset(snumbuf,0,20);
 508              		.loc 1 164 0
 509 01c6 0195     		str	r5, [sp, #4]
 510 01c8 2026     		movs	r6, #32
 511 01ca 0096     		str	r6, [sp]
 512 01cc 3346     		mov	r3, r6
 513 01ce F022     		movs	r2, #240
 514 01d0 AA21     		movs	r1, #170
 515 01d2 0A20     		movs	r0, #10
 516 01d4 FFF7FEFF 		bl	LCD_ShowString
 517              	.LVL57:
 165:Src/main.c    ****       /***********************ADC 内部温度实验***********************/
 518              		.loc 1 165 0
 519 01d8 0024     		movs	r4, #0
 520              	.LVL58:
 521 01da 0294     		str	r4, [sp, #8]
 522 01dc 6C60     		str	r4, [r5, #4]
 523 01de AC60     		str	r4, [r5, #8]
 524 01e0 EC60     		str	r4, [r5, #12]
 525 01e2 2C61     		str	r4, [r5, #16]
 167:Src/main.c    ****       sprintf(snumbuf,"adc:%d.%d C",(int)temp,(int)(temp*100)%100);
 526              		.loc 1 167 0
 527 01e4 FFF7FEFF 		bl	Get_Temprate
 528              	.LVL59:
 529 01e8 5BEC10AB 		vmov	r10, fp, d0
 530              	.LVL60:
ARM GAS  /tmp/cc6prtYI.s 			page 16


 168:Src/main.c    ****       LCD_ShowString(10,200,240,32,32,snumbuf);
 531              		.loc 1 168 0
 532 01ec 0022     		movs	r2, #0
 533 01ee 254B     		ldr	r3, .L31+76
 534 01f0 10EE100A 		vmov	r0, s0	@ int
 535 01f4 5946     		mov	r1, fp
 536 01f6 FFF7FEFF 		bl	__aeabi_dmul
 537              	.LVL61:
 538 01fa FFF7FEFF 		bl	__aeabi_d2iz
 539              	.LVL62:
 540 01fe 224B     		ldr	r3, .L31+80
 541 0200 83FB0023 		smull	r2, r3, r3, r0
 542 0204 4FEAE078 		asr	r8, r0, #31
 543 0208 C8EB6318 		rsb	r8, r8, r3, asr #5
 544 020c 6423     		movs	r3, #100
 545 020e 03FB1808 		mls	r8, r3, r8, r0
 546 0212 5046     		mov	r0, r10
 547 0214 5946     		mov	r1, fp
 548 0216 FFF7FEFF 		bl	__aeabi_d2iz
 549              	.LVL63:
 550 021a 4346     		mov	r3, r8
 551 021c 0246     		mov	r2, r0
 552 021e 1B49     		ldr	r1, .L31+84
 553 0220 2846     		mov	r0, r5
 554 0222 FFF7FEFF 		bl	sprintf
 555              	.LVL64:
 169:Src/main.c    ****       loopcout = 0;
 556              		.loc 1 169 0
 557 0226 0195     		str	r5, [sp, #4]
 558 0228 0096     		str	r6, [sp]
 559 022a 3346     		mov	r3, r6
 560 022c F022     		movs	r2, #240
 561 022e C821     		movs	r1, #200
 562 0230 0A20     		movs	r0, #10
 563 0232 FFF7FEFF 		bl	LCD_ShowString
 564              	.LVL65:
 565 0236 ACE7     		b	.L21
 566              	.L32:
 567              		.align	2
 568              	.L31:
 569 0238 00000000 		.word	.LC1
 570 023c 00000000 		.word	lcddev
 571 0240 24000000 		.word	.LC2
 572 0244 30000000 		.word	.LC3
 573 0248 44000000 		.word	.LC4
 574 024c 50000000 		.word	.LC5
 575 0250 60000000 		.word	.LC6
 576 0254 00000000 		.word	pcUsart2RX
 577 0258 6C000000 		.word	.LC7
 578 025c 78000000 		.word	.LC8
 579 0260 94000000 		.word	.LC11
 580 0264 A0000000 		.word	.LC12
 581 0268 00040240 		.word	1073873920
 582 026c 8C000000 		.word	.LC10
 583 0270 84000000 		.word	.LC9
 584 0274 00000000 		.word	.LANCHOR0
 585 0278 AC000000 		.word	.LC14
ARM GAS  /tmp/cc6prtYI.s 			page 17


 586 027c B8000000 		.word	.LC15
 587 0280 C4000000 		.word	.LC16
 588 0284 00005940 		.word	1079574528
 589 0288 1F85EB51 		.word	1374389535
 590 028c D0000000 		.word	.LC17
 591              	.LBE5:
 592              		.cfi_endproc
 593              	.LFE124:
 595              		.section	.rodata
 596              		.align	2
 597              		.set	.LANCHOR0,. + 0
 598              	.LC13:
 599 0000 53445241 		.ascii	"SDRAM TEST STRING!!\000"
 599      4D205445 
 599      53542053 
 599      5452494E 
 599      47212100 
 600 0014 00000000 		.space	80
 600      00000000 
 600      00000000 
 600      00000000 
 600      00000000 
 601              		.section	.rodata.SystemClock_Config.str1.4,"aMS",%progbits,1
 602              		.align	2
 603              	.LC0:
 604 0000 5372632F 		.ascii	"Src/main.c\000"
 604      6D61696E 
 604      2E6300
 605              		.section	.rodata.main.str1.4,"aMS",%progbits,1
 606              		.align	2
 607              	.LC1:
 608 0000 2A2A2A2A 		.ascii	"***********SYSTEM INIT***********\000"
 608      2A2A2A2A 
 608      2A2A2A53 
 608      59535445 
 608      4D20494E 
 609 0022 0000     		.space	2
 610              	.LC2:
 611 0024 4C434420 		.ascii	"LCD ID:%04X\000"
 611      49443A25 
 611      30345800 
 612              	.LC3:
 613 0030 41706F6C 		.ascii	"Apollo STM32F4/F7\000"
 613      6C6F2053 
 613      544D3332 
 613      46342F46 
 613      3700
 614 0042 0000     		.space	2
 615              	.LC4:
 616 0044 5446544C 		.ascii	"TFTLCD TEST\000"
 616      43442054 
 616      45535400 
 617              	.LC5:
 618 0050 41544F4D 		.ascii	"ATOM@ALIENTEK\000"
 618      40414C49 
 618      454E5445 
 618      4B00
ARM GAS  /tmp/cc6prtYI.s 			page 18


 619 005e 0000     		.space	2
 620              	.LC6:
 621 0060 32303138 		.ascii	"2018/10/6\000"
 621      2F31302F 
 621      3600
 622 006a 0000     		.space	2
 623              	.LC7:
 624 006c 25732028 		.ascii	"%s (OK)\012\000"
 624      4F4B290A 
 624      00
 625 0075 000000   		.space	3
 626              	.LC8:
 627 0078 4C45445F 		.ascii	"LED_CHANGE\000"
 627      4348414E 
 627      474500
 628 0083 00       		.space	1
 629              	.LC9:
 630 0084 4C45445F 		.ascii	"LED_ON\000"
 630      4F4E00
 631 008b 00       		.space	1
 632              	.LC10:
 633 008c 4C45445F 		.ascii	"LED_OFF\000"
 633      4F464600 
 634              	.LC11:
 635 0094 53445241 		.ascii	"SDRAM_TEST\000"
 635      4D5F5445 
 635      535400
 636 009f 00       		.space	1
 637              	.LC12:
 638 00a0 53445241 		.ascii	"SDRAM_PRINT\000"
 638      4D5F5052 
 638      494E5400 
 639              	.LC14:
 640 00ac 57726974 		.ascii	"Write:%s\012\000"
 640      653A2573 
 640      0A00
 641 00b6 0000     		.space	2
 642              	.LC15:
 643 00b8 52656164 		.ascii	"Read:%s\012\000"
 643      3A25730A 
 643      00
 644 00c1 000000   		.space	3
 645              	.LC16:
 646 00c4 726F6E64 		.ascii	"rondom:%03d\000"
 646      6F6D3A25 
 646      30336400 
 647              	.LC17:
 648 00d0 6164633A 		.ascii	"adc:%d.%d C\000"
 648      25642E25 
 648      64204300 
 649              		.text
 650              	.Letext0:
 651              		.file 2 "/usr/include/newlib/machine/_default_types.h"
 652              		.file 3 "/usr/include/newlib/sys/_stdint.h"
 653              		.file 4 "Drivers/CMSIS/Include/core_cm4.h"
 654              		.file 5 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/system_stm32f4xx.h"
 655              		.file 6 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f429xx.h"
ARM GAS  /tmp/cc6prtYI.s 			page 19


 656              		.file 7 "/usr/include/newlib/sys/lock.h"
 657              		.file 8 "/usr/include/newlib/sys/_types.h"
 658              		.file 9 "/usr/lib/gcc/arm-none-eabi/6.3.1/include/stddef.h"
 659              		.file 10 "/usr/include/newlib/sys/reent.h"
 660              		.file 11 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_def.h"
 661              		.file 12 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_rcc_ex.h"
 662              		.file 13 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_rcc.h"
 663              		.file 14 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_gpio.h"
 664              		.file 15 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_dma.h"
 665              		.file 16 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_fmc.h"
 666              		.file 17 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_sram.h"
 667              		.file 18 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_sdram.h"
 668              		.file 19 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_tim.h"
 669              		.file 20 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_uart.h"
 670              		.file 21 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_iwdg.h"
 671              		.file 22 "Inc/bsp_gpio.h"
 672              		.file 23 "Inc/bsp_usart.h"
 673              		.file 24 "Inc/bsp_tim.h"
 674              		.file 25 "Inc/bsp_tftlcd.h"
 675              		.file 26 "Inc/bsp_sdram.h"
 676              		.file 27 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_pwr_ex.h"
 677              		.file 28 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_cortex.h"
 678              		.file 29 "/usr/include/newlib/stdio.h"
 679              		.file 30 "/usr/include/newlib/string.h"
 680              		.file 31 "Inc/bsp_adc.h"
 681              		.file 32 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal.h"
 682              		.file 33 "Inc/bsp_tpad.h"
 683              		.file 34 "<built-in>"
ARM GAS  /tmp/cc6prtYI.s 			page 20


DEFINED SYMBOLS
                            *ABS*:0000000000000000 main.c
     /tmp/cc6prtYI.s:18     .text._Error_Handler:0000000000000000 $t
     /tmp/cc6prtYI.s:25     .text._Error_Handler:0000000000000000 _Error_Handler
     /tmp/cc6prtYI.s:41     .text.SystemClock_Config:0000000000000000 $t
     /tmp/cc6prtYI.s:48     .text.SystemClock_Config:0000000000000000 SystemClock_Config
     /tmp/cc6prtYI.s:188    .text.SystemClock_Config:00000000000000c8 $d
     /tmp/cc6prtYI.s:198    .text.main:0000000000000000 $t
     /tmp/cc6prtYI.s:205    .text.main:0000000000000000 main
     /tmp/cc6prtYI.s:569    .text.main:0000000000000238 $d
     /tmp/cc6prtYI.s:596    .rodata:0000000000000000 $d
     /tmp/cc6prtYI.s:602    .rodata.SystemClock_Config.str1.4:0000000000000000 $d
     /tmp/cc6prtYI.s:606    .rodata.main.str1.4:0000000000000000 $d
                     .debug_frame:0000000000000010 $d

UNDEFINED SYMBOLS
HAL_RCC_OscConfig
HAL_PWREx_EnableOverDrive
HAL_RCC_ClockConfig
HAL_RCC_GetHCLKFreq
HAL_SYSTICK_Config
HAL_SYSTICK_CLKSourceConfig
HAL_NVIC_SetPriority
__aeabi_dmul
__aeabi_d2iz
HAL_Init
LED_Init
KEY_Init
USART2_Init
puts
TPAD_Init
LCD_Init
SDRAM_Init
RNG_Init
ADC_Init
sprintf
LCD_ShowString
printf
strncmp
ResetUartrRx
HAL_GPIO_ReadPin
HAL_GPIO_WritePin
fsmc_sdram_test
memset
strlen
FMC_SDRAM_WriteBuffer
FMC_SDRAM_ReadBuffer
HAL_Delay
TPAD_Scan
RNG_Get_RandomRange
Get_Temprate
lcddev
pcUsart2RX
