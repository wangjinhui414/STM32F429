ARM GAS  /tmp/cc6daGJp.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"main.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text._Error_Handler,"ax",%progbits
  18              		.align	1
  19              		.global	_Error_Handler
  20              		.syntax unified
  21              		.thumb
  22              		.thumb_func
  23              		.fpu fpv4-sp-d16
  25              	_Error_Handler:
  26              	.LFB126:
  27              		.file 1 "Src/main.c"
   1:Src/main.c    **** /**
   2:Src/main.c    ****   ******************************************************************************
   3:Src/main.c    ****   * File Name          : main.c
   4:Src/main.c    ****   * Description        : Main program body
   5:Src/main.c    ****   ******************************************************************************
   6:Src/main.c    ****   *
   7:Src/main.c    ****   * COPYRIGHT(c) 2016 STMicroelectronics
   8:Src/main.c    ****   *
   9:Src/main.c    ****   * Redistribution and use in source and binary forms, with or without modification,
  10:Src/main.c    ****   * are permitted provided that the following conditions are met:
  11:Src/main.c    ****   *   1. Redistributions of source code must retain the above copyright notice,
  12:Src/main.c    ****   *      this list of conditions and the following disclaimer.
  13:Src/main.c    ****   *   2. Redistributions in binary form must reproduce the above copyright notice,
  14:Src/main.c    ****   *      this list of conditions and the following disclaimer in the documentation
  15:Src/main.c    ****   *      and/or other materials provided with the distribution.
  16:Src/main.c    ****   *   3. Neither the name of STMicroelectronics nor the names of its contributors
  17:Src/main.c    ****   *      may be used to endorse or promote products derived from this software
  18:Src/main.c    ****   *      without specific prior written permission.
  19:Src/main.c    ****   *
  20:Src/main.c    ****   * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  21:Src/main.c    ****   * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  22:Src/main.c    ****   * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
  23:Src/main.c    ****   * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
  24:Src/main.c    ****   * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
  25:Src/main.c    ****   * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
  26:Src/main.c    ****   * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
  27:Src/main.c    ****   * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
  28:Src/main.c    ****   * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
  29:Src/main.c    ****   * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  30:Src/main.c    ****   *
  31:Src/main.c    ****   ******************************************************************************
ARM GAS  /tmp/cc6daGJp.s 			page 2


  32:Src/main.c    ****   */
  33:Src/main.c    **** /* Includes ------------------------------------------------------------------*/
  34:Src/main.c    **** #include "stm32f4xx_hal.h"
  35:Src/main.c    **** 
  36:Src/main.c    **** /* USER CODE BEGIN Includes */
  37:Src/main.c    **** #include "bsp_gpio.h"
  38:Src/main.c    **** #include "bsp_usart.h"
  39:Src/main.c    **** #include "bsp_tim.h"
  40:Src/main.c    **** #include "bsp_tpad.h"
  41:Src/main.c    **** /* USER CODE END Includes */
  42:Src/main.c    **** 
  43:Src/main.c    **** /* Private variables ---------------------------------------------------------*/
  44:Src/main.c    **** 
  45:Src/main.c    **** /* USER CODE BEGIN PV */
  46:Src/main.c    **** /* Private variables ---------------------------------------------------------*/
  47:Src/main.c    **** 
  48:Src/main.c    **** /* USER CODE END PV */
  49:Src/main.c    **** 
  50:Src/main.c    **** /* Private function prototypes -----------------------------------------------*/
  51:Src/main.c    **** void SystemClock_Config(void);
  52:Src/main.c    **** //static void MX_GPIO_Init(void);
  53:Src/main.c    **** 
  54:Src/main.c    **** /* USER CODE BEGIN PFP */
  55:Src/main.c    **** /* Private function prototypes -----------------------------------------------*/
  56:Src/main.c    **** 
  57:Src/main.c    **** /* USER CODE END PFP */
  58:Src/main.c    **** 
  59:Src/main.c    **** /* USER CODE BEGIN 0 */
  60:Src/main.c    **** 
  61:Src/main.c    **** /* USER CODE END 0 */
  62:Src/main.c    **** 
  63:Src/main.c    **** int main(void)
  64:Src/main.c    **** {
  65:Src/main.c    **** 
  66:Src/main.c    ****   /* USER CODE BEGIN 1 */
  67:Src/main.c    **** //	uint8_t dir = 0;
  68:Src/main.c    **** //	uint32_t cout = 300;
  69:Src/main.c    ****   /* USER CODE END 1 */
  70:Src/main.c    **** 
  71:Src/main.c    ****   /* MCU Configuration----------------------------------------------------------*/
  72:Src/main.c    **** 
  73:Src/main.c    ****   /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
  74:Src/main.c    ****   HAL_Init();
  75:Src/main.c    **** 
  76:Src/main.c    ****   /* Configure the system clock */
  77:Src/main.c    ****   SystemClock_Config();
  78:Src/main.c    **** 
  79:Src/main.c    ****   /* Initialize all configured peripherals */
  80:Src/main.c    **** 
  81:Src/main.c    ****   /* USER CODE BEGIN 2 */
  82:Src/main.c    **** 	LED_Init();
  83:Src/main.c    **** 	KEY_Init();
  84:Src/main.c    **** 	//LED_Lignt1();
  85:Src/main.c    **** 	USART2_Init();
  86:Src/main.c    **** 	TPAD_Init();
  87:Src/main.c    **** 	
  88:Src/main.c    **** 	//TIM3_Init_Timer();
ARM GAS  /tmp/cc6daGJp.s 			page 3


  89:Src/main.c    **** 	//TIM3_Init_Pwm_CH4();
  90:Src/main.c    **** 	//IWDG_Init();
  91:Src/main.c    **** 	printf("***********SYSCLK***********\n");
  92:Src/main.c    **** 	
  93:Src/main.c    ****   /* USER CODE END 2 */
  94:Src/main.c    ****   /* Infinite loop */
  95:Src/main.c    ****   /* USER CODE BEGIN WHILE */
  96:Src/main.c    ****   while (1)
  97:Src/main.c    ****   {
  98:Src/main.c    **** 	/* USER CODE END WHILE */
  99:Src/main.c    **** 			
 100:Src/main.c    **** 	/* USER CODE BEGIN 3 */
 101:Src/main.c    **** 			if(pcUsart2RX.rflag == 1)
 102:Src/main.c    **** 			{
 103:Src/main.c    **** 				  printf("%s (OK)\n",pcUsart2RX.pcRxbuf);
 104:Src/main.c    ****           if( strncmp((char*)pcUsart2RX.pcRxbuf,"LED_CHANGE",strlen("LED_CHANGE"))==0)
 105:Src/main.c    ****           {
 106:Src/main.c    ****               if(GPIO_PIN_SET == HAL_GPIO_ReadPin(GPIOB ,GPIO_PIN_0))
 107:Src/main.c    ****               {
 108:Src/main.c    ****                   HAL_GPIO_WritePin(GPIOB ,GPIO_PIN_0 , GPIO_PIN_RESET);
 109:Src/main.c    ****                   printf("LED_ON\n");
 110:Src/main.c    ****               }
 111:Src/main.c    ****               else
 112:Src/main.c    ****               {
 113:Src/main.c    ****                   HAL_GPIO_WritePin(GPIOB ,GPIO_PIN_0 , GPIO_PIN_SET);
 114:Src/main.c    ****                   printf("LED_OFF\n");
 115:Src/main.c    ****               }			
 116:Src/main.c    ****           }
 117:Src/main.c    **** 					ResetUartrRx(&pcUsart2RX);
 118:Src/main.c    **** 			}
 119:Src/main.c    **** 
 120:Src/main.c    **** 			if(TPAD_Scan(0))
 121:Src/main.c    **** 			{
 122:Src/main.c    **** 				if(GPIO_PIN_SET == HAL_GPIO_ReadPin(GPIOB ,GPIO_PIN_0))
 123:Src/main.c    **** 				{
 124:Src/main.c    **** 						HAL_GPIO_WritePin(GPIOB ,GPIO_PIN_0 , GPIO_PIN_RESET);
 125:Src/main.c    ****             printf("LED_ON\n");
 126:Src/main.c    **** 				}
 127:Src/main.c    **** 				else
 128:Src/main.c    **** 				{
 129:Src/main.c    **** 						HAL_GPIO_WritePin(GPIOB ,GPIO_PIN_0 , GPIO_PIN_SET);
 130:Src/main.c    ****             printf("LED_OFF\n");
 131:Src/main.c    **** 				}				
 132:Src/main.c    **** 			}
 133:Src/main.c    **** 			HAL_Delay(10);
 134:Src/main.c    **** //			if(!dir)	cout--;
 135:Src/main.c    **** //			else cout++;
 136:Src/main.c    **** //			if(cout == 0)	dir =1;
 137:Src/main.c    **** //			if(cout >= 300) dir = 0;
 138:Src/main.c    **** //			TIM3_Set_Compare_CH4(cout);
 139:Src/main.c    **** //			HAL_Delay(10);
 140:Src/main.c    **** 			
 141:Src/main.c    ****   }
 142:Src/main.c    ****   /* USER CODE END 3 */
 143:Src/main.c    **** 
 144:Src/main.c    **** }
 145:Src/main.c    **** 
ARM GAS  /tmp/cc6daGJp.s 			page 4


 146:Src/main.c    **** /** System Clock Configuration
 147:Src/main.c    **** */
 148:Src/main.c    **** void SystemClock_Config(void)
 149:Src/main.c    **** {
 150:Src/main.c    **** 
 151:Src/main.c    **** 	RCC_OscInitTypeDef RCC_OscInitStruct;
 152:Src/main.c    ****   RCC_ClkInitTypeDef RCC_ClkInitStruct;
 153:Src/main.c    **** 
 154:Src/main.c    ****     /**Configure the main internal regulator output voltage 
 155:Src/main.c    ****     */
 156:Src/main.c    ****   __HAL_RCC_PWR_CLK_ENABLE();
 157:Src/main.c    **** 
 158:Src/main.c    ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 159:Src/main.c    **** 
 160:Src/main.c    ****     /**Initializes the CPU, AHB and APB busses clocks 
 161:Src/main.c    ****     */
 162:Src/main.c    ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSE;
 163:Src/main.c    ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 164:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 165:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 166:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLM = 25;
 167:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLN = 360;
 168:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 169:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLQ = 4;
 170:Src/main.c    ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 171:Src/main.c    ****   {
 172:Src/main.c    ****     _Error_Handler(__FILE__, __LINE__);
 173:Src/main.c    ****   }
 174:Src/main.c    **** 
 175:Src/main.c    ****     /**Activate the Over-Drive mode 
 176:Src/main.c    ****     */
 177:Src/main.c    ****   if (HAL_PWREx_EnableOverDrive() != HAL_OK)
 178:Src/main.c    ****   {
 179:Src/main.c    ****     _Error_Handler(__FILE__, __LINE__);
 180:Src/main.c    ****   }
 181:Src/main.c    **** 
 182:Src/main.c    ****     /**Initializes the CPU, AHB and APB busses clocks 
 183:Src/main.c    ****     */
 184:Src/main.c    ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 185:Src/main.c    ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 186:Src/main.c    ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 187:Src/main.c    ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 188:Src/main.c    ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV4;
 189:Src/main.c    ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;
 190:Src/main.c    **** 
 191:Src/main.c    ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_5) != HAL_OK)
 192:Src/main.c    ****   {
 193:Src/main.c    ****     _Error_Handler(__FILE__, __LINE__);
 194:Src/main.c    ****   }
 195:Src/main.c    **** 
 196:Src/main.c    ****     /**Configure the Systick interrupt time 
 197:Src/main.c    ****     */
 198:Src/main.c    ****   HAL_SYSTICK_Config(HAL_RCC_GetHCLKFreq()/1000);
 199:Src/main.c    **** 
 200:Src/main.c    ****     /**Configure the Systick 
 201:Src/main.c    ****     */
 202:Src/main.c    ****   HAL_SYSTICK_CLKSourceConfig(SYSTICK_CLKSOURCE_HCLK);
ARM GAS  /tmp/cc6daGJp.s 			page 5


 203:Src/main.c    **** 
 204:Src/main.c    ****   /* SysTick_IRQn interrupt configuration */
 205:Src/main.c    ****   HAL_NVIC_SetPriority(SysTick_IRQn, 0, 0);
 206:Src/main.c    **** }
 207:Src/main.c    **** 
 208:Src/main.c    **** /**
 209:Src/main.c    ****   * @brief  This function is executed in case of error occurrence.
 210:Src/main.c    ****   * @param  file: The file name as string.
 211:Src/main.c    ****   * @param  line: The line in file as a number.
 212:Src/main.c    ****   * @retval None
 213:Src/main.c    ****   */
 214:Src/main.c    **** void _Error_Handler(char *file, int line)
 215:Src/main.c    **** {
  28              		.loc 1 215 0
  29              		.cfi_startproc
  30              		@ Volatile: function does not return.
  31              		@ args = 0, pretend = 0, frame = 0
  32              		@ frame_needed = 0, uses_anonymous_args = 0
  33              		@ link register save eliminated.
  34              	.LVL0:
  35              	.L2:
  36 0000 FEE7     		b	.L2
  37              		.cfi_endproc
  38              	.LFE126:
  40              		.section	.text.SystemClock_Config,"ax",%progbits
  41              		.align	1
  42              		.global	SystemClock_Config
  43              		.syntax unified
  44              		.thumb
  45              		.thumb_func
  46              		.fpu fpv4-sp-d16
  48              	SystemClock_Config:
  49              	.LFB125:
 149:Src/main.c    **** 
  50              		.loc 1 149 0
  51              		.cfi_startproc
  52              		@ args = 0, pretend = 0, frame = 80
  53              		@ frame_needed = 0, uses_anonymous_args = 0
 149:Src/main.c    **** 
  54              		.loc 1 149 0
  55 0000 00B5     		push	{lr}
  56              	.LCFI0:
  57              		.cfi_def_cfa_offset 4
  58              		.cfi_offset 14, -4
  59 0002 95B0     		sub	sp, sp, #84
  60              	.LCFI1:
  61              		.cfi_def_cfa_offset 88
  62              	.LBB2:
 156:Src/main.c    **** 
  63              		.loc 1 156 0
  64 0004 0021     		movs	r1, #0
  65 0006 0191     		str	r1, [sp, #4]
  66 0008 2F4B     		ldr	r3, .L11
  67 000a 1A6C     		ldr	r2, [r3, #64]
  68 000c 42F08052 		orr	r2, r2, #268435456
  69 0010 1A64     		str	r2, [r3, #64]
  70 0012 1B6C     		ldr	r3, [r3, #64]
ARM GAS  /tmp/cc6daGJp.s 			page 6


  71 0014 03F08053 		and	r3, r3, #268435456
  72 0018 0193     		str	r3, [sp, #4]
  73 001a 019B     		ldr	r3, [sp, #4]
  74              	.LBE2:
  75              	.LBB3:
 158:Src/main.c    **** 
  76              		.loc 1 158 0
  77 001c 0291     		str	r1, [sp, #8]
  78 001e 2B4B     		ldr	r3, .L11+4
  79 0020 1A68     		ldr	r2, [r3]
  80 0022 42F44042 		orr	r2, r2, #49152
  81 0026 1A60     		str	r2, [r3]
  82 0028 1B68     		ldr	r3, [r3]
  83 002a 03F44043 		and	r3, r3, #49152
  84 002e 0293     		str	r3, [sp, #8]
  85 0030 029B     		ldr	r3, [sp, #8]
  86              	.LBE3:
 162:Src/main.c    ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
  87              		.loc 1 162 0
  88 0032 0123     		movs	r3, #1
  89 0034 0893     		str	r3, [sp, #32]
 163:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
  90              		.loc 1 163 0
  91 0036 4FF48033 		mov	r3, #65536
  92 003a 0993     		str	r3, [sp, #36]
 164:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
  93              		.loc 1 164 0
  94 003c 0223     		movs	r3, #2
  95 003e 0E93     		str	r3, [sp, #56]
 165:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLM = 25;
  96              		.loc 1 165 0
  97 0040 4FF48002 		mov	r2, #4194304
  98 0044 0F92     		str	r2, [sp, #60]
 166:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLN = 360;
  99              		.loc 1 166 0
 100 0046 1922     		movs	r2, #25
 101 0048 1092     		str	r2, [sp, #64]
 167:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 102              		.loc 1 167 0
 103 004a 4FF4B472 		mov	r2, #360
 104 004e 1192     		str	r2, [sp, #68]
 168:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLQ = 4;
 105              		.loc 1 168 0
 106 0050 1293     		str	r3, [sp, #72]
 169:Src/main.c    ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 107              		.loc 1 169 0
 108 0052 0423     		movs	r3, #4
 109 0054 1393     		str	r3, [sp, #76]
 170:Src/main.c    ****   {
 110              		.loc 1 170 0
 111 0056 08A8     		add	r0, sp, #32
 112 0058 FFF7FEFF 		bl	HAL_RCC_OscConfig
 113              	.LVL1:
 114 005c 38BB     		cbnz	r0, .L8
 177:Src/main.c    ****   {
 115              		.loc 1 177 0
 116 005e FFF7FEFF 		bl	HAL_PWREx_EnableOverDrive
ARM GAS  /tmp/cc6daGJp.s 			page 7


 117              	.LVL2:
 118 0062 40BB     		cbnz	r0, .L9
 184:Src/main.c    ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 119              		.loc 1 184 0
 120 0064 0F23     		movs	r3, #15
 121 0066 0393     		str	r3, [sp, #12]
 186:Src/main.c    ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 122              		.loc 1 186 0
 123 0068 0223     		movs	r3, #2
 124 006a 0493     		str	r3, [sp, #16]
 187:Src/main.c    ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV4;
 125              		.loc 1 187 0
 126 006c 0023     		movs	r3, #0
 127 006e 0593     		str	r3, [sp, #20]
 188:Src/main.c    ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;
 128              		.loc 1 188 0
 129 0070 4FF4A053 		mov	r3, #5120
 130 0074 0693     		str	r3, [sp, #24]
 189:Src/main.c    **** 
 131              		.loc 1 189 0
 132 0076 4FF48053 		mov	r3, #4096
 133 007a 0793     		str	r3, [sp, #28]
 191:Src/main.c    ****   {
 134              		.loc 1 191 0
 135 007c 0521     		movs	r1, #5
 136 007e 03A8     		add	r0, sp, #12
 137 0080 FFF7FEFF 		bl	HAL_RCC_ClockConfig
 138              	.LVL3:
 139 0084 D8B9     		cbnz	r0, .L10
 198:Src/main.c    **** 
 140              		.loc 1 198 0
 141 0086 FFF7FEFF 		bl	HAL_RCC_GetHCLKFreq
 142              	.LVL4:
 143 008a 114B     		ldr	r3, .L11+8
 144 008c A3FB0030 		umull	r3, r0, r3, r0
 145 0090 8009     		lsrs	r0, r0, #6
 146 0092 FFF7FEFF 		bl	HAL_SYSTICK_Config
 147              	.LVL5:
 202:Src/main.c    **** 
 148              		.loc 1 202 0
 149 0096 0420     		movs	r0, #4
 150 0098 FFF7FEFF 		bl	HAL_SYSTICK_CLKSourceConfig
 151              	.LVL6:
 205:Src/main.c    **** }
 152              		.loc 1 205 0
 153 009c 0022     		movs	r2, #0
 154 009e 1146     		mov	r1, r2
 155 00a0 4FF0FF30 		mov	r0, #-1
 156 00a4 FFF7FEFF 		bl	HAL_NVIC_SetPriority
 157              	.LVL7:
 206:Src/main.c    **** 
 158              		.loc 1 206 0
 159 00a8 15B0     		add	sp, sp, #84
 160              	.LCFI2:
 161              		.cfi_remember_state
 162              		.cfi_def_cfa_offset 4
 163              		@ sp needed
ARM GAS  /tmp/cc6daGJp.s 			page 8


 164 00aa 5DF804FB 		ldr	pc, [sp], #4
 165              	.L8:
 166              	.LCFI3:
 167              		.cfi_restore_state
 172:Src/main.c    ****   }
 168              		.loc 1 172 0
 169 00ae AC21     		movs	r1, #172
 170 00b0 0848     		ldr	r0, .L11+12
 171 00b2 FFF7FEFF 		bl	_Error_Handler
 172              	.LVL8:
 173              	.L9:
 179:Src/main.c    ****   }
 174              		.loc 1 179 0
 175 00b6 B321     		movs	r1, #179
 176 00b8 0648     		ldr	r0, .L11+12
 177 00ba FFF7FEFF 		bl	_Error_Handler
 178              	.LVL9:
 179              	.L10:
 193:Src/main.c    ****   }
 180              		.loc 1 193 0
 181 00be C121     		movs	r1, #193
 182 00c0 0448     		ldr	r0, .L11+12
 183 00c2 FFF7FEFF 		bl	_Error_Handler
 184              	.LVL10:
 185              	.L12:
 186 00c6 00BF     		.align	2
 187              	.L11:
 188 00c8 00380240 		.word	1073887232
 189 00cc 00700040 		.word	1073770496
 190 00d0 D34D6210 		.word	274877907
 191 00d4 00000000 		.word	.LC0
 192              		.cfi_endproc
 193              	.LFE125:
 195              		.section	.text.main,"ax",%progbits
 196              		.align	1
 197              		.global	main
 198              		.syntax unified
 199              		.thumb
 200              		.thumb_func
 201              		.fpu fpv4-sp-d16
 203              	main:
 204              	.LFB124:
  64:Src/main.c    **** 
 205              		.loc 1 64 0
 206              		.cfi_startproc
 207              		@ Volatile: function does not return.
 208              		@ args = 0, pretend = 0, frame = 0
 209              		@ frame_needed = 0, uses_anonymous_args = 0
 210 0000 08B5     		push	{r3, lr}
 211              	.LCFI4:
 212              		.cfi_def_cfa_offset 8
 213              		.cfi_offset 3, -8
 214              		.cfi_offset 14, -4
  74:Src/main.c    **** 
 215              		.loc 1 74 0
 216 0002 FFF7FEFF 		bl	HAL_Init
 217              	.LVL11:
ARM GAS  /tmp/cc6daGJp.s 			page 9


  77:Src/main.c    **** 
 218              		.loc 1 77 0
 219 0006 FFF7FEFF 		bl	SystemClock_Config
 220              	.LVL12:
  82:Src/main.c    **** 	KEY_Init();
 221              		.loc 1 82 0
 222 000a FFF7FEFF 		bl	LED_Init
 223              	.LVL13:
  83:Src/main.c    **** 	//LED_Lignt1();
 224              		.loc 1 83 0
 225 000e FFF7FEFF 		bl	KEY_Init
 226              	.LVL14:
  85:Src/main.c    **** 	TPAD_Init();
 227              		.loc 1 85 0
 228 0012 FFF7FEFF 		bl	USART2_Init
 229              	.LVL15:
  86:Src/main.c    **** 	
 230              		.loc 1 86 0
 231 0016 FFF7FEFF 		bl	TPAD_Init
 232              	.LVL16:
  91:Src/main.c    **** 	
 233              		.loc 1 91 0
 234 001a 2948     		ldr	r0, .L25
 235 001c FFF7FEFF 		bl	puts
 236              	.LVL17:
 237 0020 34E0     		b	.L19
 238              	.L23:
 103:Src/main.c    ****           if( strncmp((char*)pcUsart2RX.pcRxbuf,"LED_CHANGE",strlen("LED_CHANGE"))==0)
 239              		.loc 1 103 0
 240 0022 284C     		ldr	r4, .L25+4
 241 0024 2146     		mov	r1, r4
 242 0026 2848     		ldr	r0, .L25+8
 243 0028 FFF7FEFF 		bl	printf
 244              	.LVL18:
 104:Src/main.c    ****           {
 245              		.loc 1 104 0
 246 002c 0A22     		movs	r2, #10
 247 002e 2749     		ldr	r1, .L25+12
 248 0030 2046     		mov	r0, r4
 249 0032 FFF7FEFF 		bl	strncmp
 250              	.LVL19:
 251 0036 18B1     		cbz	r0, .L21
 252              	.L15:
 117:Src/main.c    **** 			}
 253              		.loc 1 117 0
 254 0038 2248     		ldr	r0, .L25+4
 255 003a FFF7FEFF 		bl	ResetUartrRx
 256              	.LVL20:
 257 003e 2AE0     		b	.L14
 258              	.L21:
 106:Src/main.c    ****               {
 259              		.loc 1 106 0
 260 0040 0121     		movs	r1, #1
 261 0042 00F18040 		add	r0, r0, #1073741824
 262 0046 00F50130 		add	r0, r0, #132096
 263 004a FFF7FEFF 		bl	HAL_GPIO_ReadPin
 264              	.LVL21:
ARM GAS  /tmp/cc6daGJp.s 			page 10


 265 004e 0128     		cmp	r0, #1
 266 0050 08D0     		beq	.L22
 113:Src/main.c    ****                   printf("LED_OFF\n");
 267              		.loc 1 113 0
 268 0052 0122     		movs	r2, #1
 269 0054 1146     		mov	r1, r2
 270 0056 1E48     		ldr	r0, .L25+16
 271 0058 FFF7FEFF 		bl	HAL_GPIO_WritePin
 272              	.LVL22:
 114:Src/main.c    ****               }			
 273              		.loc 1 114 0
 274 005c 1D48     		ldr	r0, .L25+20
 275 005e FFF7FEFF 		bl	puts
 276              	.LVL23:
 277 0062 E9E7     		b	.L15
 278              	.L22:
 108:Src/main.c    ****                   printf("LED_ON\n");
 279              		.loc 1 108 0
 280 0064 0022     		movs	r2, #0
 281 0066 0121     		movs	r1, #1
 282 0068 1948     		ldr	r0, .L25+16
 283 006a FFF7FEFF 		bl	HAL_GPIO_WritePin
 284              	.LVL24:
 109:Src/main.c    ****               }
 285              		.loc 1 109 0
 286 006e 1A48     		ldr	r0, .L25+24
 287 0070 FFF7FEFF 		bl	puts
 288              	.LVL25:
 289 0074 E0E7     		b	.L15
 290              	.L24:
 124:Src/main.c    ****             printf("LED_ON\n");
 291              		.loc 1 124 0
 292 0076 0022     		movs	r2, #0
 293 0078 0121     		movs	r1, #1
 294 007a 1548     		ldr	r0, .L25+16
 295 007c FFF7FEFF 		bl	HAL_GPIO_WritePin
 296              	.LVL26:
 125:Src/main.c    **** 				}
 297              		.loc 1 125 0
 298 0080 1548     		ldr	r0, .L25+24
 299 0082 FFF7FEFF 		bl	puts
 300              	.LVL27:
 301              	.L17:
 133:Src/main.c    **** //			if(!dir)	cout--;
 302              		.loc 1 133 0
 303 0086 0A20     		movs	r0, #10
 304 0088 FFF7FEFF 		bl	HAL_Delay
 305              	.LVL28:
 306              	.L19:
 101:Src/main.c    **** 			{
 307              		.loc 1 101 0
 308 008c 0D4B     		ldr	r3, .L25+4
 309 008e 93F8D030 		ldrb	r3, [r3, #208]	@ zero_extendqisi2
 310 0092 012B     		cmp	r3, #1
 311 0094 C5D0     		beq	.L23
 312              	.L14:
 120:Src/main.c    **** 			{
ARM GAS  /tmp/cc6daGJp.s 			page 11


 313              		.loc 1 120 0
 314 0096 0020     		movs	r0, #0
 315 0098 FFF7FEFF 		bl	TPAD_Scan
 316              	.LVL29:
 317 009c 0028     		cmp	r0, #0
 318 009e F2D0     		beq	.L17
 122:Src/main.c    **** 				{
 319              		.loc 1 122 0
 320 00a0 0121     		movs	r1, #1
 321 00a2 0B48     		ldr	r0, .L25+16
 322 00a4 FFF7FEFF 		bl	HAL_GPIO_ReadPin
 323              	.LVL30:
 324 00a8 0128     		cmp	r0, #1
 325 00aa E4D0     		beq	.L24
 129:Src/main.c    ****             printf("LED_OFF\n");
 326              		.loc 1 129 0
 327 00ac 0122     		movs	r2, #1
 328 00ae 1146     		mov	r1, r2
 329 00b0 0748     		ldr	r0, .L25+16
 330 00b2 FFF7FEFF 		bl	HAL_GPIO_WritePin
 331              	.LVL31:
 130:Src/main.c    **** 				}				
 332              		.loc 1 130 0
 333 00b6 0748     		ldr	r0, .L25+20
 334 00b8 FFF7FEFF 		bl	puts
 335              	.LVL32:
 336 00bc E3E7     		b	.L17
 337              	.L26:
 338 00be 00BF     		.align	2
 339              	.L25:
 340 00c0 00000000 		.word	.LC1
 341 00c4 00000000 		.word	pcUsart2RX
 342 00c8 20000000 		.word	.LC2
 343 00cc 2C000000 		.word	.LC3
 344 00d0 00040240 		.word	1073873920
 345 00d4 40000000 		.word	.LC5
 346 00d8 38000000 		.word	.LC4
 347              		.cfi_endproc
 348              	.LFE124:
 350              		.section	.rodata.SystemClock_Config.str1.4,"aMS",%progbits,1
 351              		.align	2
 352              	.LC0:
 353 0000 5372632F 		.ascii	"Src/main.c\000"
 353      6D61696E 
 353      2E6300
 354              		.section	.rodata.main.str1.4,"aMS",%progbits,1
 355              		.align	2
 356              	.LC1:
 357 0000 2A2A2A2A 		.ascii	"***********SYSCLK***********\000"
 357      2A2A2A2A 
 357      2A2A2A53 
 357      5953434C 
 357      4B2A2A2A 
 358 001d 000000   		.space	3
 359              	.LC2:
 360 0020 25732028 		.ascii	"%s (OK)\012\000"
 360      4F4B290A 
ARM GAS  /tmp/cc6daGJp.s 			page 12


 360      00
 361 0029 000000   		.space	3
 362              	.LC3:
 363 002c 4C45445F 		.ascii	"LED_CHANGE\000"
 363      4348414E 
 363      474500
 364 0037 00       		.space	1
 365              	.LC4:
 366 0038 4C45445F 		.ascii	"LED_ON\000"
 366      4F4E00
 367 003f 00       		.space	1
 368              	.LC5:
 369 0040 4C45445F 		.ascii	"LED_OFF\000"
 369      4F464600 
 370              		.text
 371              	.Letext0:
 372              		.file 2 "/usr/include/newlib/machine/_default_types.h"
 373              		.file 3 "/usr/include/newlib/sys/_stdint.h"
 374              		.file 4 "Drivers/CMSIS/Include/core_cm4.h"
 375              		.file 5 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/system_stm32f4xx.h"
 376              		.file 6 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f429xx.h"
 377              		.file 7 "/usr/include/newlib/sys/lock.h"
 378              		.file 8 "/usr/include/newlib/sys/_types.h"
 379              		.file 9 "/usr/lib/gcc/arm-none-eabi/6.3.1/include/stddef.h"
 380              		.file 10 "/usr/include/newlib/sys/reent.h"
 381              		.file 11 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_def.h"
 382              		.file 12 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_rcc_ex.h"
 383              		.file 13 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_rcc.h"
 384              		.file 14 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_gpio.h"
 385              		.file 15 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_dma.h"
 386              		.file 16 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_tim.h"
 387              		.file 17 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_uart.h"
 388              		.file 18 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_iwdg.h"
 389              		.file 19 "Src/bsp_gpio.h"
 390              		.file 20 "Src/bsp_usart.h"
 391              		.file 21 "Src/bsp_tim.h"
 392              		.file 22 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_pwr_ex.h"
 393              		.file 23 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_cortex.h"
 394              		.file 24 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal.h"
 395              		.file 25 "Src/bsp_tpad.h"
 396              		.file 26 "/usr/include/newlib/stdio.h"
 397              		.file 27 "/usr/include/newlib/string.h"
 398              		.file 28 "<built-in>"
ARM GAS  /tmp/cc6daGJp.s 			page 13


DEFINED SYMBOLS
                            *ABS*:0000000000000000 main.c
     /tmp/cc6daGJp.s:18     .text._Error_Handler:0000000000000000 $t
     /tmp/cc6daGJp.s:25     .text._Error_Handler:0000000000000000 _Error_Handler
     /tmp/cc6daGJp.s:41     .text.SystemClock_Config:0000000000000000 $t
     /tmp/cc6daGJp.s:48     .text.SystemClock_Config:0000000000000000 SystemClock_Config
     /tmp/cc6daGJp.s:188    .text.SystemClock_Config:00000000000000c8 $d
     /tmp/cc6daGJp.s:196    .text.main:0000000000000000 $t
     /tmp/cc6daGJp.s:203    .text.main:0000000000000000 main
     /tmp/cc6daGJp.s:340    .text.main:00000000000000c0 $d
     /tmp/cc6daGJp.s:351    .rodata.SystemClock_Config.str1.4:0000000000000000 $d
     /tmp/cc6daGJp.s:355    .rodata.main.str1.4:0000000000000000 $d
                     .debug_frame:0000000000000010 $d

UNDEFINED SYMBOLS
HAL_RCC_OscConfig
HAL_PWREx_EnableOverDrive
HAL_RCC_ClockConfig
HAL_RCC_GetHCLKFreq
HAL_SYSTICK_Config
HAL_SYSTICK_CLKSourceConfig
HAL_NVIC_SetPriority
HAL_Init
LED_Init
KEY_Init
USART2_Init
TPAD_Init
puts
printf
strncmp
ResetUartrRx
HAL_GPIO_ReadPin
HAL_GPIO_WritePin
HAL_Delay
TPAD_Scan
pcUsart2RX
