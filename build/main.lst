ARM GAS  /tmp/ccelMI6c.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"main.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text._Error_Handler,"ax",%progbits
  18              		.align	1
  19              		.global	_Error_Handler
  20              		.syntax unified
  21              		.thumb
  22              		.thumb_func
  23              		.fpu fpv4-sp-d16
  25              	_Error_Handler:
  26              	.LFB126:
  27              		.file 1 "Src/main.c"
   1:Src/main.c    **** /**
   2:Src/main.c    ****   ******************************************************************************
   3:Src/main.c    ****   * File Name          : main.c
   4:Src/main.c    ****   * Description        : Main program body
   5:Src/main.c    ****   ******************************************************************************
   6:Src/main.c    ****   *
   7:Src/main.c    ****   * COPYRIGHT(c) 2016 STMicroelectronics
   8:Src/main.c    ****   *
   9:Src/main.c    ****   * Redistribution and use in source and binary forms, with or without modification,
  10:Src/main.c    ****   * are permitted provided that the following conditions are met:
  11:Src/main.c    ****   *   1. Redistributions of source code must retain the above copyright notice,
  12:Src/main.c    ****   *      this list of conditions and the following disclaimer.
  13:Src/main.c    ****   *   2. Redistributions in binary form must reproduce the above copyright notice,
  14:Src/main.c    ****   *      this list of conditions and the following disclaimer in the documentation
  15:Src/main.c    ****   *      and/or other materials provided with the distribution.
  16:Src/main.c    ****   *   3. Neither the name of STMicroelectronics nor the names of its contributors
  17:Src/main.c    ****   *      may be used to endorse or promote products derived from this software
  18:Src/main.c    ****   *      without specific prior written permission.
  19:Src/main.c    ****   *
  20:Src/main.c    ****   * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  21:Src/main.c    ****   * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  22:Src/main.c    ****   * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
  23:Src/main.c    ****   * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
  24:Src/main.c    ****   * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
  25:Src/main.c    ****   * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
  26:Src/main.c    ****   * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
  27:Src/main.c    ****   * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
  28:Src/main.c    ****   * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
  29:Src/main.c    ****   * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  30:Src/main.c    ****   *
  31:Src/main.c    ****   ******************************************************************************
ARM GAS  /tmp/ccelMI6c.s 			page 2


  32:Src/main.c    ****   */
  33:Src/main.c    **** /* Includes ------------------------------------------------------------------*/
  34:Src/main.c    **** #include "stm32f4xx_hal.h"
  35:Src/main.c    **** 
  36:Src/main.c    **** /* USER CODE BEGIN Includes */
  37:Src/main.c    **** #include "bsp_gpio.h"
  38:Src/main.c    **** #include "bsp_usart.h"
  39:Src/main.c    **** #include "bsp_tim.h"
  40:Src/main.c    **** #include "bsp_tpad.h"
  41:Src/main.c    **** /* USER CODE END Includes */
  42:Src/main.c    **** 
  43:Src/main.c    **** /* Private variables ---------------------------------------------------------*/
  44:Src/main.c    **** 
  45:Src/main.c    **** /* USER CODE BEGIN PV */
  46:Src/main.c    **** /* Private variables ---------------------------------------------------------*/
  47:Src/main.c    **** 
  48:Src/main.c    **** /* USER CODE END PV */
  49:Src/main.c    **** 
  50:Src/main.c    **** /* Private function prototypes -----------------------------------------------*/
  51:Src/main.c    **** void SystemClock_Config(void);
  52:Src/main.c    **** //static void MX_GPIO_Init(void);
  53:Src/main.c    **** 
  54:Src/main.c    **** /* USER CODE BEGIN PFP */
  55:Src/main.c    **** /* Private function prototypes -----------------------------------------------*/
  56:Src/main.c    **** 
  57:Src/main.c    **** /* USER CODE END PFP */
  58:Src/main.c    **** 
  59:Src/main.c    **** /* USER CODE BEGIN 0 */
  60:Src/main.c    **** 
  61:Src/main.c    **** /* USER CODE END 0 */
  62:Src/main.c    **** 
  63:Src/main.c    **** int main(void)
  64:Src/main.c    **** {
  65:Src/main.c    **** 
  66:Src/main.c    ****   /* USER CODE BEGIN 1 */
  67:Src/main.c    **** //	uint8_t dir = 0;
  68:Src/main.c    **** //	uint32_t cout = 300;
  69:Src/main.c    ****   /* USER CODE END 1 */
  70:Src/main.c    **** 
  71:Src/main.c    ****   /* MCU Configuration----------------------------------------------------------*/
  72:Src/main.c    **** 
  73:Src/main.c    ****   /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
  74:Src/main.c    ****   HAL_Init();
  75:Src/main.c    **** 
  76:Src/main.c    ****   /* Configure the system clock */
  77:Src/main.c    ****   SystemClock_Config();
  78:Src/main.c    **** 
  79:Src/main.c    ****   /* Initialize all configured peripherals */
  80:Src/main.c    **** 
  81:Src/main.c    ****   /* USER CODE BEGIN 2 */
  82:Src/main.c    **** 	LED_Init();
  83:Src/main.c    **** 	KEY_Init();
  84:Src/main.c    **** 	//LED_Lignt1();
  85:Src/main.c    **** 	USART2_Init();
  86:Src/main.c    **** 	TPAD_Init();
  87:Src/main.c    **** 	
  88:Src/main.c    **** 	//TIM3_Init_Timer();
ARM GAS  /tmp/ccelMI6c.s 			page 3


  89:Src/main.c    **** 	//TIM3_Init_Pwm_CH4();
  90:Src/main.c    **** 	//IWDG_Init();
  91:Src/main.c    **** 	printf("***********SYSCLK***********\n");
  92:Src/main.c    **** 	
  93:Src/main.c    ****   /* USER CODE END 2 */
  94:Src/main.c    ****   /* Infinite loop */
  95:Src/main.c    ****   /* USER CODE BEGIN WHILE */
  96:Src/main.c    ****   while (1)
  97:Src/main.c    ****   {
  98:Src/main.c    **** 	/* USER CODE END WHILE */
  99:Src/main.c    **** 			
 100:Src/main.c    **** 	/* USER CODE BEGIN 3 */
 101:Src/main.c    **** 		  //����ָ�����
 102:Src/main.c    **** 			if(pcUsart2RX.rflag == 1)
 103:Src/main.c    **** 			{
 104:Src/main.c    **** 					printf("%s (OK)\n",pcUsart2RX.pcRxbuf);
 105:Src/main.c    **** 					ResetUartrRx(&pcUsart2RX);
 106:Src/main.c    **** 			}
 107:Src/main.c    **** 			if(TPAD_Scan(0))
 108:Src/main.c    **** 			{
 109:Src/main.c    **** 				if(GPIO_PIN_SET == HAL_GPIO_ReadPin(GPIOB ,GPIO_PIN_0))
 110:Src/main.c    **** 				{
 111:Src/main.c    **** 						HAL_GPIO_WritePin(GPIOB ,GPIO_PIN_0 , GPIO_PIN_RESET);
 112:Src/main.c    **** 				}
 113:Src/main.c    **** 				else
 114:Src/main.c    **** 				{
 115:Src/main.c    **** 						HAL_GPIO_WritePin(GPIOB ,GPIO_PIN_0 , GPIO_PIN_SET);
 116:Src/main.c    **** 				}				
 117:Src/main.c    **** 			}
 118:Src/main.c    **** 			HAL_Delay(10);
 119:Src/main.c    **** //			if(!dir)	cout--;
 120:Src/main.c    **** //			else cout++;
 121:Src/main.c    **** //			if(cout == 0)	dir =1;
 122:Src/main.c    **** //			if(cout >= 300) dir = 0;
 123:Src/main.c    **** //			TIM3_Set_Compare_CH4(cout);
 124:Src/main.c    **** //			HAL_Delay(10);
 125:Src/main.c    **** 			
 126:Src/main.c    ****   }
 127:Src/main.c    ****   /* USER CODE END 3 */
 128:Src/main.c    **** 
 129:Src/main.c    **** }
 130:Src/main.c    **** 
 131:Src/main.c    **** /** System Clock Configuration
 132:Src/main.c    **** */
 133:Src/main.c    **** void SystemClock_Config(void)
 134:Src/main.c    **** {
 135:Src/main.c    **** 
 136:Src/main.c    **** 	RCC_OscInitTypeDef RCC_OscInitStruct;
 137:Src/main.c    ****   RCC_ClkInitTypeDef RCC_ClkInitStruct;
 138:Src/main.c    **** 
 139:Src/main.c    ****     /**Configure the main internal regulator output voltage 
 140:Src/main.c    ****     */
 141:Src/main.c    ****   __HAL_RCC_PWR_CLK_ENABLE();
 142:Src/main.c    **** 
 143:Src/main.c    ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 144:Src/main.c    **** 
 145:Src/main.c    ****     /**Initializes the CPU, AHB and APB busses clocks 
ARM GAS  /tmp/ccelMI6c.s 			page 4


 146:Src/main.c    ****     */
 147:Src/main.c    ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSE;
 148:Src/main.c    ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 149:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 150:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 151:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLM = 25;
 152:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLN = 360;
 153:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 154:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLQ = 4;
 155:Src/main.c    ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 156:Src/main.c    ****   {
 157:Src/main.c    ****     _Error_Handler(__FILE__, __LINE__);
 158:Src/main.c    ****   }
 159:Src/main.c    **** 
 160:Src/main.c    ****     /**Activate the Over-Drive mode 
 161:Src/main.c    ****     */
 162:Src/main.c    ****   if (HAL_PWREx_EnableOverDrive() != HAL_OK)
 163:Src/main.c    ****   {
 164:Src/main.c    ****     _Error_Handler(__FILE__, __LINE__);
 165:Src/main.c    ****   }
 166:Src/main.c    **** 
 167:Src/main.c    ****     /**Initializes the CPU, AHB and APB busses clocks 
 168:Src/main.c    ****     */
 169:Src/main.c    ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 170:Src/main.c    ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 171:Src/main.c    ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 172:Src/main.c    ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 173:Src/main.c    ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV4;
 174:Src/main.c    ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;
 175:Src/main.c    **** 
 176:Src/main.c    ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_5) != HAL_OK)
 177:Src/main.c    ****   {
 178:Src/main.c    ****     _Error_Handler(__FILE__, __LINE__);
 179:Src/main.c    ****   }
 180:Src/main.c    **** 
 181:Src/main.c    ****     /**Configure the Systick interrupt time 
 182:Src/main.c    ****     */
 183:Src/main.c    ****   HAL_SYSTICK_Config(HAL_RCC_GetHCLKFreq()/1000);
 184:Src/main.c    **** 
 185:Src/main.c    ****     /**Configure the Systick 
 186:Src/main.c    ****     */
 187:Src/main.c    ****   HAL_SYSTICK_CLKSourceConfig(SYSTICK_CLKSOURCE_HCLK);
 188:Src/main.c    **** 
 189:Src/main.c    ****   /* SysTick_IRQn interrupt configuration */
 190:Src/main.c    ****   HAL_NVIC_SetPriority(SysTick_IRQn, 0, 0);
 191:Src/main.c    **** }
 192:Src/main.c    **** 
 193:Src/main.c    **** /**
 194:Src/main.c    ****   * @brief  This function is executed in case of error occurrence.
 195:Src/main.c    ****   * @param  file: The file name as string.
 196:Src/main.c    ****   * @param  line: The line in file as a number.
 197:Src/main.c    ****   * @retval None
 198:Src/main.c    ****   */
 199:Src/main.c    **** void _Error_Handler(char *file, int line)
 200:Src/main.c    **** {
  28              		.loc 1 200 0
  29              		.cfi_startproc
ARM GAS  /tmp/ccelMI6c.s 			page 5


  30              		@ Volatile: function does not return.
  31              		@ args = 0, pretend = 0, frame = 0
  32              		@ frame_needed = 0, uses_anonymous_args = 0
  33              		@ link register save eliminated.
  34              	.LVL0:
  35              	.L2:
  36 0000 FEE7     		b	.L2
  37              		.cfi_endproc
  38              	.LFE126:
  40              		.section	.text.SystemClock_Config,"ax",%progbits
  41              		.align	1
  42              		.global	SystemClock_Config
  43              		.syntax unified
  44              		.thumb
  45              		.thumb_func
  46              		.fpu fpv4-sp-d16
  48              	SystemClock_Config:
  49              	.LFB125:
 134:Src/main.c    **** 
  50              		.loc 1 134 0
  51              		.cfi_startproc
  52              		@ args = 0, pretend = 0, frame = 80
  53              		@ frame_needed = 0, uses_anonymous_args = 0
 134:Src/main.c    **** 
  54              		.loc 1 134 0
  55 0000 00B5     		push	{lr}
  56              	.LCFI0:
  57              		.cfi_def_cfa_offset 4
  58              		.cfi_offset 14, -4
  59 0002 95B0     		sub	sp, sp, #84
  60              	.LCFI1:
  61              		.cfi_def_cfa_offset 88
  62              	.LBB2:
 141:Src/main.c    **** 
  63              		.loc 1 141 0
  64 0004 0021     		movs	r1, #0
  65 0006 0191     		str	r1, [sp, #4]
  66 0008 2F4B     		ldr	r3, .L11
  67 000a 1A6C     		ldr	r2, [r3, #64]
  68 000c 42F08052 		orr	r2, r2, #268435456
  69 0010 1A64     		str	r2, [r3, #64]
  70 0012 1B6C     		ldr	r3, [r3, #64]
  71 0014 03F08053 		and	r3, r3, #268435456
  72 0018 0193     		str	r3, [sp, #4]
  73 001a 019B     		ldr	r3, [sp, #4]
  74              	.LBE2:
  75              	.LBB3:
 143:Src/main.c    **** 
  76              		.loc 1 143 0
  77 001c 0291     		str	r1, [sp, #8]
  78 001e 2B4B     		ldr	r3, .L11+4
  79 0020 1A68     		ldr	r2, [r3]
  80 0022 42F44042 		orr	r2, r2, #49152
  81 0026 1A60     		str	r2, [r3]
  82 0028 1B68     		ldr	r3, [r3]
  83 002a 03F44043 		and	r3, r3, #49152
  84 002e 0293     		str	r3, [sp, #8]
ARM GAS  /tmp/ccelMI6c.s 			page 6


  85 0030 029B     		ldr	r3, [sp, #8]
  86              	.LBE3:
 147:Src/main.c    ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
  87              		.loc 1 147 0
  88 0032 0123     		movs	r3, #1
  89 0034 0893     		str	r3, [sp, #32]
 148:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
  90              		.loc 1 148 0
  91 0036 4FF48033 		mov	r3, #65536
  92 003a 0993     		str	r3, [sp, #36]
 149:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
  93              		.loc 1 149 0
  94 003c 0223     		movs	r3, #2
  95 003e 0E93     		str	r3, [sp, #56]
 150:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLM = 25;
  96              		.loc 1 150 0
  97 0040 4FF48002 		mov	r2, #4194304
  98 0044 0F92     		str	r2, [sp, #60]
 151:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLN = 360;
  99              		.loc 1 151 0
 100 0046 1922     		movs	r2, #25
 101 0048 1092     		str	r2, [sp, #64]
 152:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 102              		.loc 1 152 0
 103 004a 4FF4B472 		mov	r2, #360
 104 004e 1192     		str	r2, [sp, #68]
 153:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLQ = 4;
 105              		.loc 1 153 0
 106 0050 1293     		str	r3, [sp, #72]
 154:Src/main.c    ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 107              		.loc 1 154 0
 108 0052 0423     		movs	r3, #4
 109 0054 1393     		str	r3, [sp, #76]
 155:Src/main.c    ****   {
 110              		.loc 1 155 0
 111 0056 08A8     		add	r0, sp, #32
 112 0058 FFF7FEFF 		bl	HAL_RCC_OscConfig
 113              	.LVL1:
 114 005c 38BB     		cbnz	r0, .L8
 162:Src/main.c    ****   {
 115              		.loc 1 162 0
 116 005e FFF7FEFF 		bl	HAL_PWREx_EnableOverDrive
 117              	.LVL2:
 118 0062 40BB     		cbnz	r0, .L9
 169:Src/main.c    ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 119              		.loc 1 169 0
 120 0064 0F23     		movs	r3, #15
 121 0066 0393     		str	r3, [sp, #12]
 171:Src/main.c    ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 122              		.loc 1 171 0
 123 0068 0223     		movs	r3, #2
 124 006a 0493     		str	r3, [sp, #16]
 172:Src/main.c    ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV4;
 125              		.loc 1 172 0
 126 006c 0023     		movs	r3, #0
 127 006e 0593     		str	r3, [sp, #20]
 173:Src/main.c    ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;
ARM GAS  /tmp/ccelMI6c.s 			page 7


 128              		.loc 1 173 0
 129 0070 4FF4A053 		mov	r3, #5120
 130 0074 0693     		str	r3, [sp, #24]
 174:Src/main.c    **** 
 131              		.loc 1 174 0
 132 0076 4FF48053 		mov	r3, #4096
 133 007a 0793     		str	r3, [sp, #28]
 176:Src/main.c    ****   {
 134              		.loc 1 176 0
 135 007c 0521     		movs	r1, #5
 136 007e 03A8     		add	r0, sp, #12
 137 0080 FFF7FEFF 		bl	HAL_RCC_ClockConfig
 138              	.LVL3:
 139 0084 D8B9     		cbnz	r0, .L10
 183:Src/main.c    **** 
 140              		.loc 1 183 0
 141 0086 FFF7FEFF 		bl	HAL_RCC_GetHCLKFreq
 142              	.LVL4:
 143 008a 114B     		ldr	r3, .L11+8
 144 008c A3FB0030 		umull	r3, r0, r3, r0
 145 0090 8009     		lsrs	r0, r0, #6
 146 0092 FFF7FEFF 		bl	HAL_SYSTICK_Config
 147              	.LVL5:
 187:Src/main.c    **** 
 148              		.loc 1 187 0
 149 0096 0420     		movs	r0, #4
 150 0098 FFF7FEFF 		bl	HAL_SYSTICK_CLKSourceConfig
 151              	.LVL6:
 190:Src/main.c    **** }
 152              		.loc 1 190 0
 153 009c 0022     		movs	r2, #0
 154 009e 1146     		mov	r1, r2
 155 00a0 4FF0FF30 		mov	r0, #-1
 156 00a4 FFF7FEFF 		bl	HAL_NVIC_SetPriority
 157              	.LVL7:
 191:Src/main.c    **** 
 158              		.loc 1 191 0
 159 00a8 15B0     		add	sp, sp, #84
 160              	.LCFI2:
 161              		.cfi_remember_state
 162              		.cfi_def_cfa_offset 4
 163              		@ sp needed
 164 00aa 5DF804FB 		ldr	pc, [sp], #4
 165              	.L8:
 166              	.LCFI3:
 167              		.cfi_restore_state
 157:Src/main.c    ****   }
 168              		.loc 1 157 0
 169 00ae 9D21     		movs	r1, #157
 170 00b0 0848     		ldr	r0, .L11+12
 171 00b2 FFF7FEFF 		bl	_Error_Handler
 172              	.LVL8:
 173              	.L9:
 164:Src/main.c    ****   }
 174              		.loc 1 164 0
 175 00b6 A421     		movs	r1, #164
 176 00b8 0648     		ldr	r0, .L11+12
ARM GAS  /tmp/ccelMI6c.s 			page 8


 177 00ba FFF7FEFF 		bl	_Error_Handler
 178              	.LVL9:
 179              	.L10:
 178:Src/main.c    ****   }
 180              		.loc 1 178 0
 181 00be B221     		movs	r1, #178
 182 00c0 0448     		ldr	r0, .L11+12
 183 00c2 FFF7FEFF 		bl	_Error_Handler
 184              	.LVL10:
 185              	.L12:
 186 00c6 00BF     		.align	2
 187              	.L11:
 188 00c8 00380240 		.word	1073887232
 189 00cc 00700040 		.word	1073770496
 190 00d0 D34D6210 		.word	274877907
 191 00d4 00000000 		.word	.LC0
 192              		.cfi_endproc
 193              	.LFE125:
 195              		.section	.text.main,"ax",%progbits
 196              		.align	1
 197              		.global	main
 198              		.syntax unified
 199              		.thumb
 200              		.thumb_func
 201              		.fpu fpv4-sp-d16
 203              	main:
 204              	.LFB124:
  64:Src/main.c    **** 
 205              		.loc 1 64 0
 206              		.cfi_startproc
 207              		@ Volatile: function does not return.
 208              		@ args = 0, pretend = 0, frame = 0
 209              		@ frame_needed = 0, uses_anonymous_args = 0
 210 0000 08B5     		push	{r3, lr}
 211              	.LCFI4:
 212              		.cfi_def_cfa_offset 8
 213              		.cfi_offset 3, -8
 214              		.cfi_offset 14, -4
  74:Src/main.c    **** 
 215              		.loc 1 74 0
 216 0002 FFF7FEFF 		bl	HAL_Init
 217              	.LVL11:
  77:Src/main.c    **** 
 218              		.loc 1 77 0
 219 0006 FFF7FEFF 		bl	SystemClock_Config
 220              	.LVL12:
  82:Src/main.c    **** 	KEY_Init();
 221              		.loc 1 82 0
 222 000a FFF7FEFF 		bl	LED_Init
 223              	.LVL13:
  83:Src/main.c    **** 	//LED_Lignt1();
 224              		.loc 1 83 0
 225 000e FFF7FEFF 		bl	KEY_Init
 226              	.LVL14:
  85:Src/main.c    **** 	TPAD_Init();
 227              		.loc 1 85 0
 228 0012 FFF7FEFF 		bl	USART2_Init
ARM GAS  /tmp/ccelMI6c.s 			page 9


 229              	.LVL15:
  86:Src/main.c    **** 	
 230              		.loc 1 86 0
 231 0016 FFF7FEFF 		bl	TPAD_Init
 232              	.LVL16:
  91:Src/main.c    **** 	
 233              		.loc 1 91 0
 234 001a 1548     		ldr	r0, .L21
 235 001c FFF7FEFF 		bl	puts
 236              	.LVL17:
 237 0020 10E0     		b	.L17
 238              	.L19:
 104:Src/main.c    **** 					ResetUartrRx(&pcUsart2RX);
 239              		.loc 1 104 0
 240 0022 144C     		ldr	r4, .L21+4
 241 0024 2146     		mov	r1, r4
 242 0026 1448     		ldr	r0, .L21+8
 243 0028 FFF7FEFF 		bl	printf
 244              	.LVL18:
 105:Src/main.c    **** 			}
 245              		.loc 1 105 0
 246 002c 2046     		mov	r0, r4
 247 002e FFF7FEFF 		bl	ResetUartrRx
 248              	.LVL19:
 249 0032 0CE0     		b	.L14
 250              	.L20:
 111:Src/main.c    **** 				}
 251              		.loc 1 111 0
 252 0034 0022     		movs	r2, #0
 253 0036 0121     		movs	r1, #1
 254 0038 1048     		ldr	r0, .L21+12
 255 003a FFF7FEFF 		bl	HAL_GPIO_WritePin
 256              	.LVL20:
 257              	.L15:
 118:Src/main.c    **** //			if(!dir)	cout--;
 258              		.loc 1 118 0
 259 003e 0A20     		movs	r0, #10
 260 0040 FFF7FEFF 		bl	HAL_Delay
 261              	.LVL21:
 262              	.L17:
 102:Src/main.c    **** 			{
 263              		.loc 1 102 0
 264 0044 0B4B     		ldr	r3, .L21+4
 265 0046 93F8D030 		ldrb	r3, [r3, #208]	@ zero_extendqisi2
 266 004a 012B     		cmp	r3, #1
 267 004c E9D0     		beq	.L19
 268              	.L14:
 107:Src/main.c    **** 			{
 269              		.loc 1 107 0
 270 004e 0020     		movs	r0, #0
 271 0050 FFF7FEFF 		bl	TPAD_Scan
 272              	.LVL22:
 273 0054 0028     		cmp	r0, #0
 274 0056 F2D0     		beq	.L15
 109:Src/main.c    **** 				{
 275              		.loc 1 109 0
 276 0058 0121     		movs	r1, #1
ARM GAS  /tmp/ccelMI6c.s 			page 10


 277 005a 0848     		ldr	r0, .L21+12
 278 005c FFF7FEFF 		bl	HAL_GPIO_ReadPin
 279              	.LVL23:
 280 0060 0128     		cmp	r0, #1
 281 0062 E7D0     		beq	.L20
 115:Src/main.c    **** 				}				
 282              		.loc 1 115 0
 283 0064 0122     		movs	r2, #1
 284 0066 1146     		mov	r1, r2
 285 0068 0448     		ldr	r0, .L21+12
 286 006a FFF7FEFF 		bl	HAL_GPIO_WritePin
 287              	.LVL24:
 288 006e E6E7     		b	.L15
 289              	.L22:
 290              		.align	2
 291              	.L21:
 292 0070 00000000 		.word	.LC1
 293 0074 00000000 		.word	pcUsart2RX
 294 0078 20000000 		.word	.LC2
 295 007c 00040240 		.word	1073873920
 296              		.cfi_endproc
 297              	.LFE124:
 299              		.section	.rodata.SystemClock_Config.str1.4,"aMS",%progbits,1
 300              		.align	2
 301              	.LC0:
 302 0000 5372632F 		.ascii	"Src/main.c\000"
 302      6D61696E 
 302      2E6300
 303              		.section	.rodata.main.str1.4,"aMS",%progbits,1
 304              		.align	2
 305              	.LC1:
 306 0000 2A2A2A2A 		.ascii	"***********SYSCLK***********\000"
 306      2A2A2A2A 
 306      2A2A2A53 
 306      5953434C 
 306      4B2A2A2A 
 307 001d 000000   		.space	3
 308              	.LC2:
 309 0020 25732028 		.ascii	"%s (OK)\012\000"
 309      4F4B290A 
 309      00
 310              		.text
 311              	.Letext0:
 312              		.file 2 "/usr/include/newlib/machine/_default_types.h"
 313              		.file 3 "/usr/include/newlib/sys/_stdint.h"
 314              		.file 4 "Drivers/CMSIS/Include/core_cm4.h"
 315              		.file 5 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/system_stm32f4xx.h"
 316              		.file 6 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f429xx.h"
 317              		.file 7 "/usr/include/newlib/sys/lock.h"
 318              		.file 8 "/usr/include/newlib/sys/_types.h"
 319              		.file 9 "/usr/lib/gcc/arm-none-eabi/6.3.1/include/stddef.h"
 320              		.file 10 "/usr/include/newlib/sys/reent.h"
 321              		.file 11 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_def.h"
 322              		.file 12 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_rcc_ex.h"
 323              		.file 13 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_rcc.h"
 324              		.file 14 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_gpio.h"
 325              		.file 15 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_dma.h"
ARM GAS  /tmp/ccelMI6c.s 			page 11


 326              		.file 16 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_tim.h"
 327              		.file 17 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_uart.h"
 328              		.file 18 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_iwdg.h"
 329              		.file 19 "Src/bsp_gpio.h"
 330              		.file 20 "Src/bsp_usart.h"
 331              		.file 21 "Src/bsp_tim.h"
 332              		.file 22 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_pwr_ex.h"
 333              		.file 23 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_cortex.h"
 334              		.file 24 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal.h"
 335              		.file 25 "Src/bsp_tpad.h"
 336              		.file 26 "/usr/include/newlib/stdio.h"
 337              		.file 27 "<built-in>"
ARM GAS  /tmp/ccelMI6c.s 			page 12


DEFINED SYMBOLS
                            *ABS*:0000000000000000 main.c
     /tmp/ccelMI6c.s:18     .text._Error_Handler:0000000000000000 $t
     /tmp/ccelMI6c.s:25     .text._Error_Handler:0000000000000000 _Error_Handler
     /tmp/ccelMI6c.s:41     .text.SystemClock_Config:0000000000000000 $t
     /tmp/ccelMI6c.s:48     .text.SystemClock_Config:0000000000000000 SystemClock_Config
     /tmp/ccelMI6c.s:188    .text.SystemClock_Config:00000000000000c8 $d
     /tmp/ccelMI6c.s:196    .text.main:0000000000000000 $t
     /tmp/ccelMI6c.s:203    .text.main:0000000000000000 main
     /tmp/ccelMI6c.s:292    .text.main:0000000000000070 $d
     /tmp/ccelMI6c.s:300    .rodata.SystemClock_Config.str1.4:0000000000000000 $d
     /tmp/ccelMI6c.s:304    .rodata.main.str1.4:0000000000000000 $d
                     .debug_frame:0000000000000010 $d

UNDEFINED SYMBOLS
HAL_RCC_OscConfig
HAL_PWREx_EnableOverDrive
HAL_RCC_ClockConfig
HAL_RCC_GetHCLKFreq
HAL_SYSTICK_Config
HAL_SYSTICK_CLKSourceConfig
HAL_NVIC_SetPriority
HAL_Init
LED_Init
KEY_Init
USART2_Init
TPAD_Init
puts
printf
ResetUartrRx
HAL_GPIO_WritePin
HAL_Delay
TPAD_Scan
HAL_GPIO_ReadPin
pcUsart2RX
