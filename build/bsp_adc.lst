ARM GAS  /tmp/ccv3GcCl.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"bsp_adc.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.ADC_Init,"ax",%progbits
  18              		.align	1
  19              		.global	ADC_Init
  20              		.syntax unified
  21              		.thumb
  22              		.thumb_func
  23              		.fpu fpv4-sp-d16
  25              	ADC_Init:
  26              	.LFB124:
  27              		.file 1 "Src/bsp_adc.c"
   1:Src/bsp_adc.c **** #include "bsp_adc.h"
   2:Src/bsp_adc.c **** 
   3:Src/bsp_adc.c **** ADC_HandleTypeDef adc_handle_typedef;
   4:Src/bsp_adc.c **** 
   5:Src/bsp_adc.c **** void ADC_Init(void)
   6:Src/bsp_adc.c **** {
  28              		.loc 1 6 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32 0000 08B5     		push	{r3, lr}
  33              	.LCFI0:
  34              		.cfi_def_cfa_offset 8
  35              		.cfi_offset 3, -8
  36              		.cfi_offset 14, -4
   7:Src/bsp_adc.c ****     adc_handle_typedef.Instance=ADC1;
  37              		.loc 1 7 0
  38 0002 0C48     		ldr	r0, .L3
  39 0004 0C4B     		ldr	r3, .L3+4
  40 0006 0360     		str	r3, [r0]
   8:Src/bsp_adc.c ****     adc_handle_typedef.Init.ClockPrescaler=ADC_CLOCK_SYNC_PCLK_DIV4;   //4ÂàÜÈ¢ëÔºåADCCLK=PCLK2/4=9
  41              		.loc 1 8 0
  42 0008 4FF48033 		mov	r3, #65536
  43 000c 4360     		str	r3, [r0, #4]
   9:Src/bsp_adc.c ****     adc_handle_typedef.Init.Resolution=ADC_RESOLUTION_12B;             //12‰ΩçÊ®°Âºè
  44              		.loc 1 9 0
  45 000e 0023     		movs	r3, #0
  46 0010 8360     		str	r3, [r0, #8]
  10:Src/bsp_adc.c ****     adc_handle_typedef.Init.DataAlign=ADC_DATAALIGN_RIGHT;             //Âè≥ÂØπÈΩê
  47              		.loc 1 10 0
  48 0012 C360     		str	r3, [r0, #12]
ARM GAS  /tmp/ccv3GcCl.s 			page 2


  11:Src/bsp_adc.c ****     adc_handle_typedef.Init.ScanConvMode=DISABLE;                      //ÈùûÊâ´ÊèèÊ®°Âºè
  49              		.loc 1 11 0
  50 0014 0361     		str	r3, [r0, #16]
  12:Src/bsp_adc.c ****     adc_handle_typedef.Init.EOCSelection=DISABLE;                      //ÂÖ≥Èó≠EOC‰∏≠Êñ≠
  51              		.loc 1 12 0
  52 0016 4361     		str	r3, [r0, #20]
  13:Src/bsp_adc.c ****     adc_handle_typedef.Init.ContinuousConvMode=DISABLE;                //ÂÖ≥Èó≠ËøûÁª≠ËΩ¨Êç¢
  53              		.loc 1 13 0
  54 0018 8361     		str	r3, [r0, #24]
  14:Src/bsp_adc.c ****     adc_handle_typedef.Init.NbrOfConversion=1;                         //1‰∏™ËΩ¨Êç¢Âú®ËßÑÂàôÂ∫èÂàó‰
  55              		.loc 1 14 0
  56 001a 0122     		movs	r2, #1
  57 001c C261     		str	r2, [r0, #28]
  15:Src/bsp_adc.c ****     adc_handle_typedef.Init.DiscontinuousConvMode=DISABLE;             //Á¶ÅÊ≠¢‰∏çËøûÁª≠ÈááÊ†∑Ê®°Âº
  58              		.loc 1 15 0
  59 001e 0362     		str	r3, [r0, #32]
  16:Src/bsp_adc.c ****     adc_handle_typedef.Init.NbrOfDiscConversion=0;                     //‰∏çËøûÁª≠ÈááÊ†∑ÈÄöÈÅìÊï∞‰∏
  60              		.loc 1 16 0
  61 0020 4362     		str	r3, [r0, #36]
  17:Src/bsp_adc.c ****     adc_handle_typedef.Init.ExternalTrigConv=ADC_SOFTWARE_START;       //ËΩØ‰ª∂Ëß¶Âèë
  62              		.loc 1 17 0
  63 0022 02F17062 		add	r2, r2, #251658240
  64 0026 8262     		str	r2, [r0, #40]
  18:Src/bsp_adc.c ****     adc_handle_typedef.Init.ExternalTrigConvEdge=ADC_EXTERNALTRIGCONVEDGE_NONE;//‰ΩøÁî®ËΩØ‰ª∂Ëß¶Âèë
  65              		.loc 1 18 0
  66 0028 C362     		str	r3, [r0, #44]
  19:Src/bsp_adc.c ****     adc_handle_typedef.Init.DMAContinuousRequests=DISABLE;             //ÂÖ≥Èó≠DMAËØ∑Ê±Ç
  67              		.loc 1 19 0
  68 002a 0363     		str	r3, [r0, #48]
  20:Src/bsp_adc.c ****     HAL_ADC_Init(&adc_handle_typedef);
  69              		.loc 1 20 0
  70 002c FFF7FEFF 		bl	HAL_ADC_Init
  71              	.LVL0:
  72 0030 08BD     		pop	{r3, pc}
  73              	.L4:
  74 0032 00BF     		.align	2
  75              	.L3:
  76 0034 00000000 		.word	adc_handle_typedef
  77 0038 00200140 		.word	1073815552
  78              		.cfi_endproc
  79              	.LFE124:
  81              		.section	.text.HAL_ADC_MspInit,"ax",%progbits
  82              		.align	1
  83              		.global	HAL_ADC_MspInit
  84              		.syntax unified
  85              		.thumb
  86              		.thumb_func
  87              		.fpu fpv4-sp-d16
  89              	HAL_ADC_MspInit:
  90              	.LFB125:
  21:Src/bsp_adc.c **** }
  22:Src/bsp_adc.c **** 
  23:Src/bsp_adc.c **** void HAL_ADC_MspInit(ADC_HandleTypeDef* hadc)
  24:Src/bsp_adc.c **** {
  91              		.loc 1 24 0
  92              		.cfi_startproc
  93              		@ args = 0, pretend = 0, frame = 32
ARM GAS  /tmp/ccv3GcCl.s 			page 3


  94              		@ frame_needed = 0, uses_anonymous_args = 0
  95              	.LVL1:
  96 0000 00B5     		push	{lr}
  97              	.LCFI1:
  98              		.cfi_def_cfa_offset 4
  99              		.cfi_offset 14, -4
 100 0002 89B0     		sub	sp, sp, #36
 101              	.LCFI2:
 102              		.cfi_def_cfa_offset 40
 103              	.LBB2:
  25:Src/bsp_adc.c ****     GPIO_InitTypeDef GPIO_Initure;
  26:Src/bsp_adc.c ****     __HAL_RCC_ADC1_CLK_ENABLE();            //‰ΩøËÉΩADC1Êó∂Èíü
 104              		.loc 1 26 0
 105 0004 0022     		movs	r2, #0
 106 0006 0192     		str	r2, [sp, #4]
 107 0008 0F4B     		ldr	r3, .L7
 108 000a 596C     		ldr	r1, [r3, #68]
 109 000c 41F48071 		orr	r1, r1, #256
 110 0010 5964     		str	r1, [r3, #68]
 111 0012 596C     		ldr	r1, [r3, #68]
 112 0014 01F48071 		and	r1, r1, #256
 113 0018 0191     		str	r1, [sp, #4]
 114 001a 0199     		ldr	r1, [sp, #4]
 115              	.LBE2:
 116              	.LBB3:
  27:Src/bsp_adc.c ****     __HAL_RCC_GPIOA_CLK_ENABLE();			//ÂºÄÂêØGPIOAÊó∂Èíü
 117              		.loc 1 27 0
 118 001c 0292     		str	r2, [sp, #8]
 119 001e 196B     		ldr	r1, [r3, #48]
 120 0020 41F00101 		orr	r1, r1, #1
 121 0024 1963     		str	r1, [r3, #48]
 122 0026 1B6B     		ldr	r3, [r3, #48]
 123 0028 03F00103 		and	r3, r3, #1
 124 002c 0293     		str	r3, [sp, #8]
 125 002e 029B     		ldr	r3, [sp, #8]
 126              	.LBE3:
  28:Src/bsp_adc.c **** 	
  29:Src/bsp_adc.c ****     GPIO_Initure.Pin=GPIO_PIN_5;            //PA5
 127              		.loc 1 29 0
 128 0030 2023     		movs	r3, #32
 129 0032 0393     		str	r3, [sp, #12]
  30:Src/bsp_adc.c ****     GPIO_Initure.Mode=GPIO_MODE_ANALOG;     //Ê®°Êãü
 130              		.loc 1 30 0
 131 0034 0323     		movs	r3, #3
 132 0036 0493     		str	r3, [sp, #16]
  31:Src/bsp_adc.c ****     GPIO_Initure.Pull=GPIO_NOPULL;          //‰∏çÂ∏¶‰∏ä‰∏ãÊãâ
 133              		.loc 1 31 0
 134 0038 0592     		str	r2, [sp, #20]
  32:Src/bsp_adc.c ****     HAL_GPIO_Init(GPIOA,&GPIO_Initure);
 135              		.loc 1 32 0
 136 003a 03A9     		add	r1, sp, #12
 137 003c 0348     		ldr	r0, .L7+4
 138              	.LVL2:
 139 003e FFF7FEFF 		bl	HAL_GPIO_Init
 140              	.LVL3:
  33:Src/bsp_adc.c **** }
 141              		.loc 1 33 0
ARM GAS  /tmp/ccv3GcCl.s 			page 4


 142 0042 09B0     		add	sp, sp, #36
 143              	.LCFI3:
 144              		.cfi_def_cfa_offset 4
 145              		@ sp needed
 146 0044 5DF804FB 		ldr	pc, [sp], #4
 147              	.L8:
 148              		.align	2
 149              	.L7:
 150 0048 00380240 		.word	1073887232
 151 004c 00000240 		.word	1073872896
 152              		.cfi_endproc
 153              	.LFE125:
 155              		.section	.text.Get_ADC_Value,"ax",%progbits
 156              		.align	1
 157              		.global	Get_ADC_Value
 158              		.syntax unified
 159              		.thumb
 160              		.thumb_func
 161              		.fpu fpv4-sp-d16
 163              	Get_ADC_Value:
 164              	.LFB126:
  34:Src/bsp_adc.c **** 
  35:Src/bsp_adc.c **** uint32_t Get_ADC_Value(uint32_t ch)
  36:Src/bsp_adc.c **** {
 165              		.loc 1 36 0
 166              		.cfi_startproc
 167              		@ args = 0, pretend = 0, frame = 16
 168              		@ frame_needed = 0, uses_anonymous_args = 0
 169              	.LVL4:
 170 0000 10B5     		push	{r4, lr}
 171              	.LCFI4:
 172              		.cfi_def_cfa_offset 8
 173              		.cfi_offset 4, -8
 174              		.cfi_offset 14, -4
 175 0002 84B0     		sub	sp, sp, #16
 176              	.LCFI5:
 177              		.cfi_def_cfa_offset 24
  37:Src/bsp_adc.c ****     ADC_ChannelConfTypeDef adc1_chanconf;
  38:Src/bsp_adc.c ****     adc1_chanconf.Channel = ch;
 178              		.loc 1 38 0
 179 0004 0090     		str	r0, [sp]
  39:Src/bsp_adc.c ****     adc1_chanconf.Rank = 1;
 180              		.loc 1 39 0
 181 0006 0123     		movs	r3, #1
 182 0008 0193     		str	r3, [sp, #4]
  40:Src/bsp_adc.c ****     adc1_chanconf.SamplingTime = ADC_SAMPLETIME_480CYCLES;
 183              		.loc 1 40 0
 184 000a 0723     		movs	r3, #7
 185 000c 0293     		str	r3, [sp, #8]
  41:Src/bsp_adc.c ****     adc1_chanconf.Offset= 0;
 186              		.loc 1 41 0
 187 000e 0023     		movs	r3, #0
 188 0010 0393     		str	r3, [sp, #12]
  42:Src/bsp_adc.c ****     HAL_ADC_ConfigChannel(&adc_handle_typedef, &adc1_chanconf);
 189              		.loc 1 42 0
 190 0012 084C     		ldr	r4, .L11
 191 0014 6946     		mov	r1, sp
ARM GAS  /tmp/ccv3GcCl.s 			page 5


 192 0016 2046     		mov	r0, r4
 193              	.LVL5:
 194 0018 FFF7FEFF 		bl	HAL_ADC_ConfigChannel
 195              	.LVL6:
  43:Src/bsp_adc.c ****     HAL_ADC_Start(&adc_handle_typedef);
 196              		.loc 1 43 0
 197 001c 2046     		mov	r0, r4
 198 001e FFF7FEFF 		bl	HAL_ADC_Start
 199              	.LVL7:
  44:Src/bsp_adc.c ****     HAL_ADC_PollForConversion(&adc_handle_typedef,10);
 200              		.loc 1 44 0
 201 0022 0A21     		movs	r1, #10
 202 0024 2046     		mov	r0, r4
 203 0026 FFF7FEFF 		bl	HAL_ADC_PollForConversion
 204              	.LVL8:
  45:Src/bsp_adc.c ****     return HAL_ADC_GetValue(&adc_handle_typedef);
 205              		.loc 1 45 0
 206 002a 2046     		mov	r0, r4
 207 002c FFF7FEFF 		bl	HAL_ADC_GetValue
 208              	.LVL9:
  46:Src/bsp_adc.c **** }
 209              		.loc 1 46 0
 210 0030 04B0     		add	sp, sp, #16
 211              	.LCFI6:
 212              		.cfi_def_cfa_offset 8
 213              		@ sp needed
 214 0032 10BD     		pop	{r4, pc}
 215              	.L12:
 216              		.align	2
 217              	.L11:
 218 0034 00000000 		.word	adc_handle_typedef
 219              		.cfi_endproc
 220              	.LFE126:
 222              		.section	.text.Get_ADC_AverageValue,"ax",%progbits
 223              		.align	1
 224              		.global	Get_ADC_AverageValue
 225              		.syntax unified
 226              		.thumb
 227              		.thumb_func
 228              		.fpu fpv4-sp-d16
 230              	Get_ADC_AverageValue:
 231              	.LFB127:
  47:Src/bsp_adc.c **** uint32_t Get_ADC_AverageValue(uint32_t ch,uint16_t times)
  48:Src/bsp_adc.c **** {
 232              		.loc 1 48 0
 233              		.cfi_startproc
 234              		@ args = 0, pretend = 0, frame = 0
 235              		@ frame_needed = 0, uses_anonymous_args = 0
 236              	.LVL10:
 237 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 238              	.LCFI7:
 239              		.cfi_def_cfa_offset 24
 240              		.cfi_offset 3, -24
 241              		.cfi_offset 4, -20
 242              		.cfi_offset 5, -16
 243              		.cfi_offset 6, -12
 244              		.cfi_offset 7, -8
ARM GAS  /tmp/ccv3GcCl.s 			page 6


 245              		.cfi_offset 14, -4
 246 0002 0646     		mov	r6, r0
 247 0004 0F46     		mov	r7, r1
 248              	.LVL11:
  49:Src/bsp_adc.c ****     uint32_t sum = 0;
  50:Src/bsp_adc.c ****     uint8_t i=times;
 249              		.loc 1 50 0
 250 0006 CAB2     		uxtb	r2, r1
 251              	.LVL12:
  49:Src/bsp_adc.c ****     uint32_t sum = 0;
 252              		.loc 1 49 0
 253 0008 0025     		movs	r5, #0
  51:Src/bsp_adc.c ****     while(i--)
 254              		.loc 1 51 0
 255 000a 07E0     		b	.L14
 256              	.LVL13:
 257              	.L15:
  52:Src/bsp_adc.c ****     {
  53:Src/bsp_adc.c ****         sum+=Get_ADC_Value(ch);
 258              		.loc 1 53 0
 259 000c 3046     		mov	r0, r6
 260 000e FFF7FEFF 		bl	Get_ADC_Value
 261              	.LVL14:
 262 0012 0544     		add	r5, r5, r0
 263              	.LVL15:
  54:Src/bsp_adc.c ****         HAL_Delay(5);
 264              		.loc 1 54 0
 265 0014 0520     		movs	r0, #5
 266 0016 FFF7FEFF 		bl	HAL_Delay
 267              	.LVL16:
  51:Src/bsp_adc.c ****     while(i--)
 268              		.loc 1 51 0
 269 001a 2246     		mov	r2, r4
 270              	.LVL17:
 271              	.L14:
 272 001c 531E     		subs	r3, r2, #1
 273 001e DCB2     		uxtb	r4, r3
 274              	.LVL18:
 275 0020 002A     		cmp	r2, #0
 276 0022 F3D1     		bne	.L15
  55:Src/bsp_adc.c ****     }
  56:Src/bsp_adc.c ****     return sum/times;
  57:Src/bsp_adc.c **** }
 277              		.loc 1 57 0
 278 0024 B5FBF7F0 		udiv	r0, r5, r7
 279 0028 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 280              		.cfi_endproc
 281              	.LFE127:
 283              		.global	__aeabi_f2d
 284              		.global	__aeabi_dmul
 285              		.global	__aeabi_dsub
 286              		.global	__aeabi_ddiv
 287              		.global	__aeabi_dadd
 288              		.section	.text.Get_Temprate,"ax",%progbits
 289              		.align	1
 290              		.global	Get_Temprate
 291              		.syntax unified
ARM GAS  /tmp/ccv3GcCl.s 			page 7


 292              		.thumb
 293              		.thumb_func
 294              		.fpu fpv4-sp-d16
 296              	Get_Temprate:
 297              	.LFB128:
  58:Src/bsp_adc.c **** double Get_Temprate(void)
  59:Src/bsp_adc.c **** {
 298              		.loc 1 59 0
 299              		.cfi_startproc
 300              		@ args = 0, pretend = 0, frame = 0
 301              		@ frame_needed = 0, uses_anonymous_args = 0
 302 0000 08B5     		push	{r3, lr}
 303              	.LCFI8:
 304              		.cfi_def_cfa_offset 8
 305              		.cfi_offset 3, -8
 306              		.cfi_offset 14, -4
  60:Src/bsp_adc.c ****     uint32_t adcx;
  61:Src/bsp_adc.c ****     double temperate;
  62:Src/bsp_adc.c ****     adcx = Get_ADC_AverageValue(ADC_CHANNEL_TEMPSENSOR ,10);
 307              		.loc 1 62 0
 308 0002 0A21     		movs	r1, #10
 309 0004 1648     		ldr	r0, .L19+24
 310 0006 FFF7FEFF 		bl	Get_ADC_AverageValue
 311              	.LVL19:
  63:Src/bsp_adc.c ****     //ËØªÂèñÂÜÖÈÉ®Ê∏©Â∫¶‰º†ÊÑüÂô®ÈÄöÈÅì,10 Ê¨°ÂèñÂπ≥Âùá
  64:Src/bsp_adc.c ****     temperate = (float)adcx * (3.3/4096); //ÁîµÂéãÂÄº
 312              		.loc 1 64 0
 313 000a 07EE900A 		vmov	s15, r0	@ int
 314 000e F8EE677A 		vcvt.f32.u32	s15, s15
 315 0012 17EE900A 		vmov	r0, s15
 316              	.LVL20:
 317 0016 FFF7FEFF 		bl	__aeabi_f2d
 318              	.LVL21:
 319 001a 0BA3     		adr	r3, .L19
 320 001c D3E90023 		ldrd	r2, [r3]
 321 0020 FFF7FEFF 		bl	__aeabi_dmul
 322              	.LVL22:
  65:Src/bsp_adc.c ****     temperate = (temperate-0.76)/0.0025 + 25; //ËΩ¨Êç¢‰∏∫Ê∏©Â∫¶ÂÄº
 323              		.loc 1 65 0
 324 0024 0AA3     		adr	r3, .L19+8
 325 0026 D3E90023 		ldrd	r2, [r3]
 326 002a FFF7FEFF 		bl	__aeabi_dsub
 327              	.LVL23:
 328 002e 0AA3     		adr	r3, .L19+16
 329 0030 D3E90023 		ldrd	r2, [r3]
 330 0034 FFF7FEFF 		bl	__aeabi_ddiv
 331              	.LVL24:
 332 0038 0022     		movs	r2, #0
 333 003a 0A4B     		ldr	r3, .L19+28
 334 003c FFF7FEFF 		bl	__aeabi_dadd
 335              	.LVL25:
  66:Src/bsp_adc.c ****     return temperate;
  67:Src/bsp_adc.c **** }...
 336              		.loc 1 67 0
 337 0040 41EC100B 		vmov	d0, r0, r1
 338 0044 08BD     		pop	{r3, pc}
 339              	.L20:
ARM GAS  /tmp/ccv3GcCl.s 			page 8


 340 0046 00BF     		.align	3
 341              	.L19:
 342 0048 66666666 		.word	1717986918
 343 004c 66664A3F 		.word	1061840486
 344 0050 52B81E85 		.word	2233382994
 345 0054 EB51E83F 		.word	1072189931
 346 0058 7B14AE47 		.word	1202590843
 347 005c E17A643F 		.word	1063549665
 348 0060 12000010 		.word	268435474
 349 0064 00003940 		.word	1077477376
 350              		.cfi_endproc
 351              	.LFE128:
 353              		.comm	adc_handle_typedef,72,4
 354              		.text
 355              	.Letext0:
 356              		.file 2 "/usr/include/newlib/machine/_default_types.h"
 357              		.file 3 "/usr/include/newlib/sys/_stdint.h"
 358              		.file 4 "Drivers/CMSIS/Include/core_cm4.h"
 359              		.file 5 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/system_stm32f4xx.h"
 360              		.file 6 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f429xx.h"
 361              		.file 7 "/usr/include/newlib/sys/lock.h"
 362              		.file 8 "/usr/include/newlib/sys/_types.h"
 363              		.file 9 "/usr/lib/gcc/arm-none-eabi/6.3.1/include/stddef.h"
 364              		.file 10 "/usr/include/newlib/sys/reent.h"
 365              		.file 11 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f4xx.h"
 366              		.file 12 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_def.h"
 367              		.file 13 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_gpio.h"
 368              		.file 14 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_dma.h"
 369              		.file 15 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_adc.h"
 370              		.file 16 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal.h"
ARM GAS  /tmp/ccv3GcCl.s 			page 9


DEFINED SYMBOLS
                            *ABS*:0000000000000000 bsp_adc.c
     /tmp/ccv3GcCl.s:18     .text.ADC_Init:0000000000000000 $t
     /tmp/ccv3GcCl.s:25     .text.ADC_Init:0000000000000000 ADC_Init
     /tmp/ccv3GcCl.s:76     .text.ADC_Init:0000000000000034 $d
                            *COM*:0000000000000048 adc_handle_typedef
     /tmp/ccv3GcCl.s:82     .text.HAL_ADC_MspInit:0000000000000000 $t
     /tmp/ccv3GcCl.s:89     .text.HAL_ADC_MspInit:0000000000000000 HAL_ADC_MspInit
     /tmp/ccv3GcCl.s:150    .text.HAL_ADC_MspInit:0000000000000048 $d
     /tmp/ccv3GcCl.s:156    .text.Get_ADC_Value:0000000000000000 $t
     /tmp/ccv3GcCl.s:163    .text.Get_ADC_Value:0000000000000000 Get_ADC_Value
     /tmp/ccv3GcCl.s:218    .text.Get_ADC_Value:0000000000000034 $d
     /tmp/ccv3GcCl.s:223    .text.Get_ADC_AverageValue:0000000000000000 $t
     /tmp/ccv3GcCl.s:230    .text.Get_ADC_AverageValue:0000000000000000 Get_ADC_AverageValue
     /tmp/ccv3GcCl.s:289    .text.Get_Temprate:0000000000000000 $t
     /tmp/ccv3GcCl.s:296    .text.Get_Temprate:0000000000000000 Get_Temprate
     /tmp/ccv3GcCl.s:342    .text.Get_Temprate:0000000000000048 $d
                     .debug_frame:0000000000000010 $d

UNDEFINED SYMBOLS
HAL_ADC_Init
HAL_GPIO_Init
HAL_ADC_ConfigChannel
HAL_ADC_Start
HAL_ADC_PollForConversion
HAL_ADC_GetValue
HAL_Delay
__aeabi_f2d
__aeabi_dmul
__aeabi_dsub
__aeabi_ddiv
__aeabi_dadd
